(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{164:function(e,a,t){e.exports=t(264)},169:function(e,a,t){},171:function(e,a,t){},264:function(e,a,t){"use strict";t.r(a);var n=t(0),r=t.n(n),i=t(26),s=t.n(i),o=(t(169),t(1)),l=t(2),c=t(4),u=t(3),d=t(5),m=(t(171),t(7)),g=function e(a){Object(o.a)(this,e),this.isHuman=a.isHuman,this.allTargetedOrdnanceItems=[],this.ordnanceItemsArrivingThisTick=[]},p=function e(){Object(o.a)(this,e)};p.GAME_VERSION=.1,p.NOTIFY_BUILD_RESULT_CALLBACK_NAME="rpsn_notifyBuildDragResult",p.NOTIFY_TARGET_RESULT_CALLBACK_NAME="rpsn_notifyTargetResult",p.MIN_INITIAL_FIGHTERS=1,p.MAX_INITIAL_FIGHTERS=4,p.MIN_INITIAL_BOMBERS=1,p.MAX_INITIAL_BOMBERS=4,p.MIN_ICBMS=1,p.MAX_ICBMS=4,p.MIN_SUB_MISSILES=1,p.MAX_SUB_MISSILES=3,p.BUILD_DROP="build",p.TARGET_MISSILE_DROP="target",p.FIRST_STRIKE_POPULATION_HIT_PCT=.9,p.SECOND_STRIKE_POPULATION_HIT_PCT=.5,p.THIRD_STRIKE_POPULATION_HIT_PCT=.25,p.PCT_VISIBLE_SENTIMENT_THRESHOLD=20,p.EXPECTED_BASE_COUNT_FACTOR=1.75,p.DROPTYPE="dropType",p.BASETYPE="baseType",p.MANIFESTINDEX="manifestIndex",p.ARMY_BASELABEL="Army",p.NAVY_BASELABEL="Navy",p.MISSILE_BASELABEL="Missile",p.ABM_BASELABEL="Abm",p.AIR_BASELABEL="Air",p.MIN_INITIAL_CITIES=5,p.MAX_INITIAL_CITIES=8;var h=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"throwDice",value:function(e){return Math.floor(Math.random()*e.hiNumberMinus1)}},{key:"pickRandomFromArray",value:function(e){if(!e.sourceArray)throw"Rng.ts: pickRandomFromArray: error, source array is null or undefined.";if(0===e.sourceArray.length)throw"Rng.ts: pickRandomFromArray: error, source array is empty.";return e.sourceArray[this.throwDice({hiNumberMinus1:e.sourceArray.length})]}}]),e}(),y=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"canPlaceItemAtMapLocation",value:function(e){return!e.atLocation.Contents||"Rural"===e.atLocation.Contents.WorldObjectLabel}},{key:"getMissileArrivalTicks",value:function(){var e=h.throwDice({hiNumberMinus1:99});return e<33?1:e<85?2:3}},{key:"getTotalBasesAllowedToBuild",value:function(e){return"Build"===e.basedOnStrategicChoice?2:"Spy"===e.basedOnStrategicChoice?1:0}},{key:"getNuclearStrikePopulationKilled",value:function(e){var a=[p.FIRST_STRIKE_POPULATION_HIT_PCT,p.SECOND_STRIKE_POPULATION_HIT_PCT,p.THIRD_STRIKE_POPULATION_HIT_PCT];return e.onMapLocation.Contents?e.onMapLocation.Contents.Population*a[e.onMapLocation.nuclearStrikes-1]:0}},{key:"getAllowedMoves",value:function(){var e=["Build","Spy","Declare War","Skip"],a=["Activate","Sue for Peace","Surrender"],t=["Army","Navy","Air","Missile","Radar","ABM"],n=t.concat("ABM"),r=["Activate Base"],i=K.getInstance(),s=i.gameYear>1962?n:t;return i.isPeacetime?{strategicOptions:e,tacticalOptions:s}:{strategicOptions:a,tacticalOptions:r}}},{key:"getLocationDamage",value:function(e){return{strikeCount:e.locationAttacked.nuclearStrikes<3?e.locationAttacked.nuclearStrikes+=1:3,populationKilled:this.getNuclearStrikePopulationKilled({onMapLocation:e.locationAttacked}),attackingOrdnance:e.attackedBy}}}]),e}();y.GameStartYear=1945;var f=t(64),v=function e(a){Object(o.a)(this,e),this.myTarget=null,this.remainingTicksBeforeStriking=0,this.wasConsumed=!1,this.myID=e.nextOrdnanceID++,this.myBase=a.parentBase,this.wasIntercepted=!1,"Missile"===a.parentBase.WorldObjectLabel?this.myWorldLabel="ICBM":"Navy"===a.parentBase.WorldObjectLabel?this.myWorldLabel="Submarine Missile":this.myWorldLabel="Bomber"};v.nextOrdnanceID=0;var b=function(){function e(a){Object(o.a)(this,e),this.Name="",this.Population=h.throwDice({hiNumberMinus1:1e4})+1e4,this.wasDestroyed=!1,this.isReceivingOrders=!1,this.myMapLocation=a.atLocation,this.yearBuilt=a.yearBuilt}return Object(l.a)(e,[{key:"activate",value:function(){this.isReceivingOrders=!0}}]),e}(),B=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"getAbmBaseName",value:function(){if(e.availableAbmBaseNames.length>0){var a=j.getNameForNameableItem({fromNamesArr:e.availableAbmBaseNames});return e.availableAbmBaseNames=a.allOtherNames,a.baseName}return"Abm Base ".concat(++e.genericBaseCounter)}}]),e}();B.genericBaseCounter=0,B.availableAbmBaseNames=[];var M=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this,e))).WorldObjectLabel="ABM",t.Name=B.getAbmBaseName(),t.totalMissiles=0,t.isTracking=!1,t.isReceivingOrders=!1,t}return Object(d.a)(a,e),a}(b),O=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"getRadarBaseName",value:function(){var e=j.getNameForNameableItem({fromNamesArr:this.availableRadarBaseNames});return this.availableRadarBaseNames=e.allOtherNames,e.baseName}}]),e}();O.availableRadarBaseNames=["Hertz","Maxwell","H\xfclsmeyer","Marconi","Franklin","Watt","Tizard","Wimperis","Wilkins","Bowan","Rowe","Lindemann","Dowding","Randall","Boot","Lewis","Butement","Pollard","Worlledge","Paris","Erbsl\xf6h","Willisen","Hollmann","Schultes","Taylor","Young","Hyland","Breit","Tuve","Page","Popov","Oshchepkov","Lobanov"];var k=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this,e))).WorldObjectLabel="Radar",t.modeOfOperation="Inactive",t.Name=O.getRadarBaseName(),console.log("RadarBase.ts: ctor: got a radar base name:",t.Name),t}return Object(d.a)(a,e),Object(l.a)(a,[{key:"setModeOfOperation",value:function(e){this.modeOfOperation=e.mode}}]),a}(b),A=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"getMissileBaseName",value:function(){if(e.availableMissileBaseNames.length>0){var a=j.getNameForNameableItem({fromNamesArr:e.availableMissileBaseNames});return e.availableMissileBaseNames=a.allOtherNames,a.baseName}return"Missile Base ".concat(++e.genericBaseCounter)}}]),e}();A.genericBaseCounter=0,A.availableMissileBaseNames=["Wernher von Braun","Armstrong","Musk","Cayley","Goddard","Korolev","Chawla","Wallis","Ohain","Mitchell","Crawford Johnson","Amrutkar-Pate","Manypu","Arnold","Korolyov","Gagarin","Ramo","Kryukov","Barmin","Coand\u0103","Heinkel","Horikoshi","Nadiradze","Popov","Rich","Walter","Wendt","Whittle","Wright","Oppenheimer","Einstein","Curie","Rutherford","Soddy","Le\xf3 Szil\xe1rd","Joliot-Curie","Strassmann","Hahn","Sengier","Bethe"];var C=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this,e))).WorldObjectLabel="Missile",t.public=1,t.Name=A.getMissileBaseName(),t.ordnance=[],t.isReceivingOrders=!1,t}return Object(d.a)(a,e),Object(l.a)(a,[{key:"isAllOrdnanceTargeted",value:function(){return!this.ordnance.some(function(e){return null===e.myTarget})}},{key:"activate",value:function(){j.activateMissileBase({forBase:this})}}]),a}(b),T=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"getAirBaseName",value:function(){if(e.availableAirBaseNames.length>0){var a=j.getNameForNameableItem({fromNamesArr:e.availableAirBaseNames});return e.availableAirBaseNames=a.allOtherNames,a.baseName}return"Air Base ".concat(++e.genericBaseCounter)}}]),e}();T.genericBaseCounter=0,T.availableAirBaseNames=[];var L=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this,e))).WorldObjectLabel="Air",t.Name=T.getAirBaseName(),t.ordnance=[],t.totalFighters=0,t.isFlying=!1,t}return Object(d.a)(a,e),Object(l.a)(a,[{key:"activate",value:function(){console.log("AirBase.ts: activate: entering."),j.activateAirBase({forBase:this})}},{key:"isAllOrdnanceTargeted",value:function(){return!this.ordnance.some(function(e){return null===e.myTarget})}}]),a}(b),I=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"getArmyBaseName",value:function(){if(e.availableArmyBaseNames.length>0){var a=j.getNameForNameableItem({fromNamesArr:e.availableArmyBaseNames});return e.availableArmyBaseNames=a.allOtherNames,a.baseName}return"Army Base ".concat(++e.genericBaseCounter)}}]),e}();I.genericBaseCounter=0,I.availableArmyBaseNames=[];var E=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this,e))).WorldObjectLabel="Army",t.Name=I.getArmyBaseName(),t.isReceivingOrders=!1,t.isDecamped=!1,t}return Object(d.a)(a,e),a}(b),N=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"getNavyBaseName",value:function(){if(e.availableNavyBaseNames.length>0){var a=j.getNameForNameableItem({fromNamesArr:e.availableNavyBaseNames});return e.availableNavyBaseNames=a.allOtherNames,a.baseName}return"Generic Navy Base ".concat(++e.gericBaseCounter)}}]),e}();N.gericBaseCounter=0,N.availableNavyBaseNames=["Wahoo","Triton","George Washington","Ethan Allen","Nautilus","Turtle","Plongeur","Drebbel","Das Boot","Red October","Yellow","Seaview","SHADO","Cetacean","seaQuest","Sword","Iron Fish","Hydronaut","Supercar","Stingray","Thunderbird","Leif Eriskson","Sea Tiger","Blue Sumbarine No 6","Proteus","Wonder","Jetmarine","Fenian Ram S1881","Gotengo","Voyager","Rorqual Maaru","Sea Trench","Ulysses","UX","Vorpal Blade","I-507"];var S=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this,e))).WorldObjectLabel="Navy",t.isReceivingOrders=!1,t.Name=N.getNavyBaseName(),t.ordnance=[],t}return Object(d.a)(a,e),Object(l.a)(a,[{key:"isAllOrdnanceTargeted",value:function(){return!this.ordnance.some(function(e){return null===e.myTarget})}},{key:"activate",value:function(){j.activateNavyBase({forBase:this})}}]),a}(b),P=function(){function e(){Object(o.a)(this,e),this.msh="MilitaryBaseFactory: ",this.nextBaseID=0}return Object(l.a)(e,[{key:"createNewBase",value:function(e){console.log("MilitaryBaseFactory: createNewBase: entering with args:",{args:e});var a=K.getInstance(),t={atLocation:e.atLocation,yearBuilt:a.gameYear};switch(e.baseType){case"ABM":return new M(t);case"Radar":return new k(t);case"Navy":return new S(t);case"Missile":return new C(t);case"Air":return new L(t);case"Army":return new E(t)}}}],[{key:"getInstance",value:function(){return this.instance||(this.instance=new e),this.instance}}]),e}(),w=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"GetMapLocationSingleCharacterCode",value:function(e){if(null===e.forMapLocation.Contents)return"Empty";switch(e.forMapLocation.Contents.WorldObjectLabel){case"ABM":return"A";case"Air":return"B";case"Army":return"T";case"City":return"C";case"Missile":return"M";case"Navy":return"S";case"Radar":return"R";case"Rural":return"\u2022";case"Town":return"T"}return"empty"}},{key:"applyFunctionToCountryMap",value:function(e){for(var a=0;a<e.map.map.length;a++)for(var t=0;t<e.map.map[a].length;t++)e.xformFunc(e.map.map[a][t])}},{key:"allMilitaryBases",value:function(e){var a=this.getMapSummary({forMap:e.forMap});return[].concat(a.allAbmBases,a.allAirBases,a.allArmyBases,a.allMissileBases,a.allNavyBases,a.allRadarBases)}},{key:"getMapSummary",value:function(a){for(var t=this,n=function(e){return function(e){return e.ordnance.filter(function(e){return e.myTarget&&!1===e.wasConsumed})}(e).length},r=e,i=function(a,t){return a.Contents?{allAbmBases:r.isAbmBase(a)?t.allAbmBases.concat(a.Contents):t.allAbmBases,totalAbmMissilesOnLine:r.isAbmBase(a)?t.totalAbmMissilesOnLine+=a.Contents.totalMissiles:t.totalAbmMissilesOnLine,allRadarBases:r.isRadarBase(a)?t.allRadarBases.concat(a.Contents):t.allRadarBases,totalPassiveRadarStationsOnLine:(i=a,e.isRadarBase(i)&&"Passive"===i.Contents.modeOfOperation?t.totalPassiveRadarStationsOnLine+=1:t.totalPassiveRadarStationsOnLine),totalActiveRadarStationsOnLine:function(a){return e.isRadarBase(a)&&"Active"===a.Contents.modeOfOperation}(a)?t.totalActiveRadarStationsOnLine+=1:t.totalActiveRadarStationsOnLine,allArmyBases:r.isArmyBase(a)?t.allArmyBases.concat(a.Contents):t.allArmyBases,allAirBases:r.isAirBase(a)?t.allAirBases.concat(a.Contents):t.allAirBases,totalBombersInFlight:r.isAirBase(a)?t.totalBombersInFlight+=n(a.Contents):t.totalBombersInFlight,totalFightersOnPatrol:r.isAirBase(a)?t.totalFightersOnPatrol+=a.Contents.totalFighters:t.totalFightersOnPatrol,allMissileBases:r.isMissileBase(a)?t.allMissileBases.concat(a.Contents):t.allMissileBases,totalICBMsOnLine:r.isMissileBase(a)?t.totalICBMsOnLine+=n(a.Contents):t.totalICBMsOnLine,allNavyBases:r.isNavyBase(a)?t.allNavyBases.concat(a.Contents):t.allNavyBases,totalSubMissilesOnLine:r.isNavyBase(a)?t.totalSubMissilesOnLine+=n(a.Contents):t.totalSubMissilesOnLine,targetedMapLocations:a.isTargeted?t.targetedMapLocations.concat(a):t.targetedMapLocations,totalPopulation:t.totalPopulation+=a.Contents.Population}:t;var i},s=a.forMap.map.reduce(function(e,a){return n=e,r=a.reduce(function(e,a){return i(a,e)},t.initialSummary),{allAbmBases:n.allAbmBases.concat(r.allAbmBases),totalAbmMissilesOnLine:n.totalAbmMissilesOnLine+r.totalAbmMissilesOnLine,allRadarBases:n.allRadarBases.concat(r.allRadarBases),allAirBases:n.allAirBases.concat(r.allAirBases),allArmyBases:n.allArmyBases.concat(r.allArmyBases),allMissileBases:n.allMissileBases.concat(r.allMissileBases),allNavyBases:n.allNavyBases.concat(r.allNavyBases),targetedMapLocations:n.targetedMapLocations.concat(r.targetedMapLocations),totalICBMsOnLine:n.totalICBMsOnLine+r.totalICBMsOnLine,totalSubMissilesOnLine:n.totalSubMissilesOnLine+r.totalSubMissilesOnLine,totalPassiveRadarStationsOnLine:n.totalPassiveRadarStationsOnLine+r.totalPassiveRadarStationsOnLine,totalActiveRadarStationsOnLine:n.totalActiveRadarStationsOnLine+r.totalActiveRadarStationsOnLine,totalBombersInFlight:n.totalBombersInFlight+r.totalBombersInFlight,totalFightersOnPatrol:n.totalFightersOnPatrol+r.totalFightersOnPatrol,totalPopulation:n.totalPopulation+r.totalPopulation};var n,r},this.initialSummary),o=0,l=0;l<a.forMap.map.length;l++)for(var c=0;c<a.forMap.map[l].length;c++){var u=a.forMap.map[l][c].Contents;null!==u&&(o+=u.Population)}return s.totalPopulation=o,s}},{key:"getMapLocationHtmlID",value:function(e){return"MapLocation_".concat(e.uniqueID)}},{key:"createTestBases",value:function(e){var a=e.onMap.map[0][7],t=P.getInstance().createNewBase({baseType:"Missile",atLocation:a}),n=e.onMap.map[0][1],r=P.getInstance().createNewBase({baseType:"Radar",atLocation:n}),i=e.onMap.map[0][2],s=P.getInstance().createNewBase({baseType:"Radar",atLocation:i}),o=e.onMap.map[0][3],l=P.getInstance().createNewBase({baseType:"Air",atLocation:o}),c=e.onMap.map[0][4],u=P.getInstance().createNewBase({baseType:"Navy",atLocation:c}),d=e.onMap.map[0][5],m=P.getInstance().createNewBase({baseType:"Army",atLocation:d}),g=e.onMap.map[0][6],p=P.getInstance().createNewBase({baseType:"ABM",atLocation:g});t&&a.placeItem({itemToPlace:t}),r&&n.placeItem({itemToPlace:r}),s&&i.placeItem({itemToPlace:s}),l&&o.placeItem({itemToPlace:l}),u&&c.placeItem({itemToPlace:u}),m&&d.placeItem({itemToPlace:m}),p&&g.placeItem({itemToPlace:p})}}]),e}();w.initialSummary={allAbmBases:[],allRadarBases:[],allAirBases:[],allArmyBases:[],allNavyBases:[],allMissileBases:[],targetedMapLocations:[],totalAbmMissilesOnLine:0,totalICBMsOnLine:0,totalSubMissilesOnLine:0,totalPassiveRadarStationsOnLine:0,totalActiveRadarStationsOnLine:0,totalBombersInFlight:0,totalFightersOnPatrol:0,totalPopulation:0},w.isWO=function(e,a){return e.Contents&&e.Contents.WorldObjectLabel===a},w.isAirBase=function(e){return w.isWO(e,"Air")},w.isArmyBase=function(e){return w.isWO(e,"Army")},w.isMissileBase=function(e){return w.isWO(e,"Missile")},w.isNavyBase=function(e){return w.isWO(e,"Navy")},w.isRadarBase=function(e){return w.isWO(e,"Radar")},w.isAbmBase=function(e){return w.isWO(e,"ABM")};var j=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"registerGamestateWatcher",value:function(e){this.gameStateWatchers=this.gameStateWatchers.concat(e.watcher)}},{key:"notifyGamestateChange",value:function(e){this.gameStateWatchers.forEach(function(a){return a.handleGamestateChange({details:e.details})})}},{key:"playComputerTurn",value:function(){var e=K.getInstance();this.notifyGamestateChange({details:{changeLabel:"Computer Playing Its Turn",miscDetails:e.currentPlayer.Name}}),e.currentPlayer=e.computerPlayer,e.computerPlayer.playTurn(),e.currentPlayer=e.humanPlayer}},{key:"activateAbmBase",value:function(e){var a=e.forBase;a.totalMissiles=h.throwDice({hiNumberMinus1:5})+1,a.isTracking=!0,a.isReceivingOrders=!0,this.notifyGamestateChange({details:{changeLabel:"Base Activated",relatedBase:a}})}},{key:"handleMissileTargeted",value:function(e){var a=e.targetingOrdnance;e.atMapLocation.isTargeted=!0,a.myTarget=e.atMapLocation,a.remainingTicksBeforeStriking=y.getMissileArrivalTicks(),console.log("GameLogic: handleMissileTargeted: A missile will land in [".concat(a.remainingTicksBeforeStriking,"] ticks.")),e.attackingPlayer.allTargetedOrdnanceItems=e.attackingPlayer.allTargetedOrdnanceItems.concat(e.targetingOrdnance),this.notifyGamestateChange({details:{changeLabel:"Map Location Targeted",relatedLocation:e.atMapLocation}})}},{key:"activateMissileBase",value:function(e){var a=e.forBase;a.isReceivingOrders=!0,this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}});var t=h.throwDice({hiNumberMinus1:p.MAX_ICBMS-1})+p.MIN_ICBMS;a.ordnance=[];for(var n=0;n<t;n++)a.ordnance=a.ordnance.concat(new v({parentBase:a}))}},{key:"notifyNewBaseConstructed",value:function(e){this.notifyGamestateChange({details:{changeLabel:"New base constructed",relatedBase:e.forBaseType}})}},{key:"activateAirBase",value:function(e){console.log("GameLogic: activateAirBase: Entering:",e),e.forBase.isReceivingOrders=!0,this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}});var a=p.MAX_INITIAL_FIGHTERS+h.throwDice({hiNumberMinus1:p.MAX_INITIAL_FIGHTERS-1});e.forBase.totalFighters=a;for(var t=h.throwDice({hiNumberMinus1:p.MAX_ICBMS-1})+p.MIN_ICBMS,n=0;n<t;n++)e.forBase.ordnance=e.forBase.ordnance.concat(new v({parentBase:e.forBase}))}},{key:"activateNavyBase",value:function(e){e.forBase.isReceivingOrders=!0,this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}});for(var a=h.throwDice({hiNumberMinus1:p.MIN_SUB_MISSILES-1})+p.MAX_SUB_MISSILES,t=0;t<a;t++)e.forBase.ordnance=e.forBase.ordnance.concat(new v({parentBase:e.forBase}))}},{key:"activateArmyBase",value:function(e){this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}}),e.forBase.isDecamped=!0}},{key:"activateRadarBase",value:function(e){this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}})}},{key:"startClock",value:function(){var a=!1;setInterval(function(){if(a);else{a=!0,setTimeout(function(){e.pulseClock(),a=!1},3e3)}},1e3)}},{key:"pulseClock",value:function(){this.notifyGamestateChange({details:{changeLabel:"Tick"}}),K.getInstance().isWartime&&(this.resolveWartimeAttacks(),K.getInstance().computerPlayer.playTurn())}},{key:"resolveWartimeAttacks",value:function(){var e=this,a=function(e){console.log("GameLogic.ts: tryAbmDefense: Entering.");var a=function(e){if(console.log("GameLogic.ts: tryAbmDefense: tryIntercept: Entering, ABM Base:",{base:e.defender}),!e.defender)return"failed";if(e.defender.totalMissiles<1)return"failed";var a=h.throwDice({hiNumberMinus1:100})<50;return console.log("GameLogic.ts: tryAbmDefense: tryIntercept: did shoot down?",a),e.defender.totalMissiles--,a?(console.log("GameLogic.ts: tryAbmDefense: tryIntercept: Successfully intercepted."),e.nuclearOrdnance.wasConsumed=!0,e.nuclearOrdnance.wasIntercepted=!0,"succeeded"):"failed"},t=0,n=e.defendingPlayer.map.getAllABMBases();return n.length<1?(console.log("GameLogic.ts: tryAbmDefense: player has no ABMs, no defense possible."),"failed"):"succeeded"===a({nuclearOrdnance:e.nuclearOrdnance,defender:n[t]})?"succeeded":"ICBM"===e.nuclearOrdnance.myWorldLabel||"Submarine Missile"===e.nuclearOrdnance.myWorldLabel?"failed":(t=-1,n[0].totalMissiles>0&&(t=0),n[0].totalMissiles<1&&n.length>1&&(t=1),"succeeded"===a({nuclearOrdnance:e.nuclearOrdnance,defender:n[t]})?"succeeded":(console.log("GameLogic.ts: tryAbmDefense: tryIntercept: Failed to intercept."),"failed"))},t=function(t){console.log("resolveWartimeAttacks: tryAttack: entering, args:",{args:t});var n=function(e){return e.attackingPlayer.ordnanceItemsArrivingThisTick.filter(function(a){return null!==a.myTarget&&!a.wasConsumed&&!(a.remainingTicksBeforeStriking>0)&&a.myTarget.uniqueID===e.locationUnderAttack.uniqueID})[0]}({attackingPlayer:t.attackingPlayer,locationUnderAttack:t.locationUnderAttack});if(console.log("resolveWartimeAttacks: tryAttack: found ordnance:",{foundAttackingOrdnance:n,ticks:n?n.remainingTicksBeforeStriking:"na"}),n){n.wasConsumed=!0;var r=w.getMapSummary({forMap:t.defendingPlayer.map});if(console.log("resolveWartimeAttacks: tryAttack: player is defending attack:",{attackingOrdnance:n,defendingPlayerMapSummary:r}),"ICBM"===n.myWorldLabel){if("failed"===function(t){return"succeeded"===a({defendingPlayer:t.defendingPlayer,nuclearOrdnance:t.attackingOrdnance})?(console.log("resolveWartimeAttacks: tryICBMAttack: attacking player's ICBM was shot down by an ABM.",{defendingPlayer:t.defendingPlayer,locationAttacked:t.locationUnderAttack}),e.notifyGamestateChange({details:{changeLabel:"ICBM Intercepted",relatedLocation:t.locationUnderAttack}}),"failed"):(console.log("resolveWartimeAttacks: tryAttack: Missile successfully hit target."),"succeeded")}({attackingOrdnance:n,defendingPlayer:t.defendingPlayer,locationUnderAttack:t.locationUnderAttack}))return"failed"}else if("Bomber"===n.myWorldLabel){if("failed"===function(t){return"succeeded"===a({defendingPlayer:t.defendingPlayer,nuclearOrdnance:t.attackingOrdnance})?(console.log("resolveWartimeAttacks: tryBomberAttack: attacking player's bomber was shot down by an ABM.",{defendingPlayer:t.defendingPlayer,locationAttacked:t.locationUnderAttack}),e.notifyGamestateChange({details:{changeLabel:"Bomber was shot down by ABM",relatedLocation:t.locationUnderAttack}}),"failed"):(console.log("resolveWartimeAttacks: tryBomberAttack: Bomber successfully hit target."),"succeeded")}({attackingOrdnance:n,defendingPlayer:t.defendingPlayer,locationUnderAttack:t.locationUnderAttack}))return"failed"}else{if("Submarine Missile"!==n.myWorldLabel)return console.error("GameLogic.ts: tryAttack: Error: tried to attack with unknown ordnance type:",n),"failed";if("failed"===function(t){return"succeeded"===a({defendingPlayer:t.defendingPlayer,nuclearOrdnance:t.attackingOrdnance})?(console.log("resolveWartimeAttacks: trySubmarineAttack: attacking player's submarine missile was shot down by an ABM.",{defendingPlayer:t.defendingPlayer,locationAttacked:t.locationUnderAttack}),e.notifyGamestateChange({details:{changeLabel:"Submarine Missile Shot Down By ABM",relatedLocation:t.locationUnderAttack}}),"failed"):(console.log("resolveWartimeAttacks: tryBomberAttack: Bomber successfully hit target."),"succeeded")}({attackingOrdnance:n,defendingPlayer:t.defendingPlayer,locationUnderAttack:t.locationUnderAttack}))return"failed"}return y.getLocationDamage({attackedBy:n,locationAttacked:t.locationUnderAttack})}return console.error("resolveWartimeAttack: resolveAttack: there was no ordnance to attack with."),"failed"},n=function(e){return e.p.allTargetedOrdnanceItems=e.p.allTargetedOrdnanceItems.map(function(e){return e.remainingTicksBeforeStriking<1?e:Object(f.a)({},e,{remainingTicksBeforeStriking:e.remainingTicksBeforeStriking-1})})},r=function(e){return e.forPlayer.ordnanceItemsArrivingThisTick.some(function(e){return e.remainingTicksBeforeStriking<1&&!1===e.wasConsumed&&!1===e.wasIntercepted})},i=function(a){var n=a.defendingPlayer.map,r=w.getMapSummary({forMap:n}).targetedMapLocations,i=r.filter(function(e){return a.attackingPlayer.ordnanceItemsArrivingThisTick.filter(function(a){return!1===a.wasConsumed&&!1===a.wasIntercepted&&a.myTarget&&a.myTarget.uniqueID===e.uniqueID}).length>0});console.log("GameLogic: resolveAttacksOnPlayer: player locations under attack this tick:",{allTargetedLocations:r,locationsUnderAttackThisTick:i});for(var o=0;o<i.length;o++){var l=i[o].Contents,c=i[o];if(l){var u=t({attackingPlayer:a.attackingPlayer,defendingPlayer:a.defendingPlayer,locationUnderAttack:c});"failed"===u?e.notifyGamestateChange({details:{changeLabel:"ICBM Intercepted",relatedLocation:c}}):s({location:i[o],damage:u})}}},s=function(a){if(a.location.nuclearStrikes=a.damage.strikeCount,a.location.Contents&&(a.location.Contents.Population-=a.damage.populationKilled),a.location.myMap.owningPlayer.totalCausualties+=a.damage.populationKilled,a.location.isMilitaryBase()){var t=a.location.Contents;t.wasDestroyed=t.wasDestroyed||h.throwDice({hiNumberMinus1:100})<97,t.isReceivingOrders=t.isReceivingOrders||t.isReceivingOrders&&!t.wasDestroyed}e.notifyGamestateChange({details:{changeLabel:"Location Nuked",relatedLocation:a.location}})},o=function(e){return!e.wasIntercepted&&!e.wasConsumed};console.log("GameLogic: resolveWartimeAttacks: Entering.");var l=K.getInstance(),c=l.currentPlayer,u=l.currentPlayer.isHuman?l.computerPlayer:l.humanPlayer;c.allTargetedOrdnanceItems=n({p:c}),u.allTargetedOrdnanceItems=n({p:u}),c.ordnanceItemsArrivingThisTick=c.allTargetedOrdnanceItems.filter(function(e){return o(e)&&e.remainingTicksBeforeStriking<1}),u.ordnanceItemsArrivingThisTick=u.allTargetedOrdnanceItems.filter(function(e){return o(e)&&e.remainingTicksBeforeStriking<1}),r({forPlayer:c})?(console.log("GameLogic: resolveWartimeAttacks Player A (".concat(c.Name,") has ordnance ready this tick:"),c.ordnanceItemsArrivingThisTick),i({attackingPlayer:c,defendingPlayer:u})):console.log("GameLogic: resolveWartimeAttacks Player A (".concat(c.Name,") does not have ordnance ready this tick.")),r({forPlayer:u})?(console.log("GameLogic: resolveWartimeAttacks Player B (".concat(u.Name,") has ordnance ready this tick:"),u.ordnanceItemsArrivingThisTick),i({attackingPlayer:u,defendingPlayer:c})):console.log("GameLogic: resolveWartimeAttacks Player B (".concat(u.Name,") does not have ordnance ready this tick."))}},{key:"declareWar",value:function(e){console.log("GameLogic.ts: declareWar: A player declared war:",{declaringPlayer:e.declaringPlayer}),e.declaringPlayer.declaredWar=!0,K.getInstance().isPeacetime=!1,K.getInstance().isWartime=!0,this.notifyGamestateChange({details:{changeLabel:"War Declared"}})}},{key:"finishHumanTurn",value:function(){K.getInstance().currentPlayer=K.getInstance().computerPlayer,this.playComputerTurn(),K.getInstance().currentPlayer=K.getInstance().humanPlayer}},{key:"finishComputerTurn",value:function(){K.getInstance().currentPlayer=K.getInstance().humanPlayer,this.notifyGamestateChange({details:{changeLabel:"Advance Turn"}})}},{key:"advanceTurn",value:function(){var e=K.getInstance();e.turn++,console.log("GameLogic.ts: advanceTurn: new game turn / year:",{turn:e.turn,year:e.gameYear}),this.notifyGamestateChange({details:{changeLabel:"Advance Turn"}})}},{key:"spyOnPlayer",value:function(e){console.log("Gamelogic: spyOnPlayer: entering, target:",e.targetPlayer);for(var a=w.allMilitaryBases({forMap:e.targetPlayer.map}),t=K.getInstance(),n=0;n<a.length;n++){var r=a[n];console.log("GameLogic: spyOnPlayer: spying on a base:",{base:r});var i=r.yearBuilt-y.GameStartYear,s=1===e.spyLevel?1.1:1.25,o=(t.gameYear-y.GameStartYear)*s-i;a[n].myMapLocation.enemyVisibility+=Math.ceil(o)}var l=function(e){h.throwDice({hiNumberMinus1:100})<e.myMapLocation.enemyVisibility&&(e.myMapLocation.enemyVisibility=100)};l(h.pickRandomFromArray({sourceArray:a})),e.spyLevel>1&&l(h.pickRandomFromArray({sourceArray:a}))}},{key:"getNameForNameableItem",value:function(e){var a=h.throwDice({hiNumberMinus1:e.fromNamesArr.length});return e.fromNamesArr.reduce(function(e,t,n){return n===a?{allOtherNames:e.allOtherNames,baseName:t}:{allOtherNames:e.allOtherNames.concat(t),baseName:e.baseName}},{allOtherNames:[],baseName:""})}}]),e}();j.gameStateWatchers=[];var D=function e(){Object(o.a)(this,e),this.Name="",this.Population=0},R=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this))).WorldObjectLabel="City",t.Name=e.name,t.Population=e.population,t}return Object(d.a)(a,e),a}(D),W=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this))).WorldObjectLabel="Rural",t.Name=e.name,t.Population=e.population,t}return Object(d.a)(a,e),a}(D),F=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this))).WorldObjectLabel="Town",t.Name=e.name,t.Population=e.population,t}return Object(d.a)(a,e),a}(D),G=function(){function e(){Object(o.a)(this,e),this.msh="PopulationAreaFactory: ",this.nextPopulationAreaID=0}return Object(l.a)(e,[{key:"newName",value:function(e){return console.log("".concat(this.msh,": newName: typeof base:"),e.forPopulationArea.WorldObjectLabel),"xyzzy"}},{key:"createNewPopulationArea",value:function(e){switch(e.popAreaType){case"City":return new R({name:"xyzzy",population:h.throwDice({hiNumberMinus1:65e5})+6e6});case"Rural":return new W({name:"xyzzy",population:h.throwDice({hiNumberMinus1:1e3})+1e3});case"Town":return new F({name:"xyzzy",population:h.throwDice({hiNumberMinus1:5e4})+1e4})}return new W({name:"Error",population:-1})}}],[{key:"getInstance",value:function(){return this.instance||(this.instance=new e),this.instance}}]),e}(),_=function(e){function a(e){var t;return Object(o.a)(this,a),(t=Object(c.a)(this,Object(u.a)(a).call(this))).uniqueID=0,t.Contents=new W({name:"Empty",population:0}),t.uniqueID=a.nextID++,t.isTargeted=!1,t.nuclearStrikes=0,t.myMap=e.onMap,t.population=0,t}return Object(d.a)(a,e),Object(l.a)(a,[{key:"placeItem",value:function(e){this.Contents=e.itemToPlace;var a=e.itemToPlace;!a||"City"!==a.WorldObjectLabel&&"Town"!==a.WorldObjectLabel||(this.enemyVisibility=100)}},{key:"isMilitaryBase",value:function(){var e=this;return["ABM","Air","Army","Missile","Navy","Radar"].filter(function(a){return null!==e.Contents&&a===e.Contents.WorldObjectLabel}).length>0}}]),a}(function e(){Object(o.a)(this,e),this.isTargeted=!1,this.enemyVisibility=0});_.nextID=1;var x=function(){function e(a){Object(o.a)(this,e),this.newRuralArea=function(){return G.getInstance().createNewPopulationArea({popAreaType:"Rural"})},this.newCity=function(){return G.getInstance().createNewPopulationArea({popAreaType:"City"})},this.sizeX=a.sizeX,this.sizeY=a.sizeY,this.map=[[]],this.owner=a.ownerLabel,this.owningPlayer=a.owningPlayer,this.initializeMap()}return Object(l.a)(e,[{key:"logDetailedMapToConsole",value:function(){console.log("WorldMap.ts: logSelfToConsole: logging map:",{map:this.map});for(var e=0;e<this.map.length;e++)console.table(this.map[e])}},{key:"initializeMap",value:function(){console.log("CountryMap: initializeMap: Entering, my sizex/sizey:",this.sizeX,this.sizeY,this.owner);for(var e=0;e<this.sizeX;e++){this.map.push([]);for(var a=0;a<this.sizeY;a++){var t=new _({onMap:this});t.Contents=this.newRuralArea(),this.map[e].push(t)}}for(var n=h.throwDice({hiNumberMinus1:p.MAX_INITIAL_CITIES-p.MIN_INITIAL_CITIES})+p.MIN_INITIAL_CITIES;n>0;){var r=h.throwDice({hiNumberMinus1:this.sizeX-1}),i=h.throwDice({hiNumberMinus1:this.sizeY-1}),s=this.map[r][i];"Rural"===s.Contents.WorldObjectLabel&&(n--,s.Contents=this.newCity())}}},{key:"getAllMilitaryBases",value:function(){var e=this.map.map(function(e){return function(e){return e.filter(function(e){return e.isMilitaryBase()})}(e).map(function(e){return e.Contents})});return[].concat.apply([],e)}},{key:"getAllABMBases",value:function(){return this.getAllMilitaryBases().filter(function(e){return"ABM"===e.WorldObjectLabel})}},{key:"getRandomLocation",value:function(){var e=h.throwDice({hiNumberMinus1:this.map.length-1}),a=h.throwDice({hiNumberMinus1:this.map.length-1});return this.map[e][a]}}]),e}(),H=function(e){function a(){var e;return Object(o.a)(this,a),(e=Object(c.a)(this,Object(u.a)(a).call(this,{isHuman:!1}))).totalCausualties=0,j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(e))}),e.map=new x({sizeX:10,sizeY:10,ownerLabel:"Computer",owningPlayer:Object(m.a)(Object(m.a)(e))}),e.Name="Computer",e.declaredWar=!1,e.totalFunctionalActiveRadarStations=0,e.totalFunctionalPassiveRadarStations=0,e.totalCausualties=0,w.createTestBases({onMap:e.map}),e.sentimentMap=new Map,e.sentimentMap.set("Underinformed",{percentBuildStart:25,percentSpyStart:26,percentDeclareWarStart:99}),e.sentimentMap.set("Falling Behind",{percentBuildStart:75,percentSpyStart:76,percentDeclareWarStart:99}),e.sentimentMap.set("Confident",{percentBuildStart:49,percentSpyStart:50,percentDeclareWarStart:98}),e}return Object(d.a)(a,e),Object(l.a)(a,[{key:"handleGamestateChange",value:function(e){}},{key:"playTurn",value:function(){var e=K.getInstance();e.isPeacetime&&(this.playPeacefulTurn(),setTimeout(function(){j.advanceTurn()},500)),e.isWartime&&this.playWarTurn()}},{key:"playWarTurn",value:function(){a.testGuard||(console.log("ComputerPlayer: playWarTurn: Entering."),a.testGuard=!0,this.radarTest(),this.missileTest(),this.airBaseTest(),this.navyBaseTest(),this.armyBaseTest(),this.abmBaseTest())}},{key:"abmBaseTest",value:function(){console.log("ComputerPlayer.ts: abmBaseTest: entering.");var e=w.getMapSummary({forMap:this.map});if(!(e.allAbmBases.length<1)){console.log("ComputerPlayer.ts: abmBaseTest: testing abm base:",e.allAbmBases[0]);var a=e.allAbmBases[0];j.activateAbmBase({forBase:a})}}},{key:"armyBaseTest",value:function(){console.log("ComputerPlayer.ts: armyBaseTest: entering.");var e=w.getMapSummary({forMap:this.map});if(!(e.allArmyBases.length<1)){console.log("ComputerPlayer.ts: armyBaseTest: testing army base:",e.allArmyBases[0]);var a=e.allArmyBases[0];j.activateArmyBase({forBase:a})}}},{key:"missileTest",value:function(){var e=this,a=w.getMapSummary({forMap:this.map});if(!(a.allMissileBases.length<1)){var t=a.allMissileBases[0];j.activateMissileBase({forBase:t}),console.log("ComputerPlayer.ts: missileTest: Activated a missile:",{missile:t}),t.ordnance.forEach(function(a){j.handleMissileTargeted({attackingPlayer:e,atMapLocation:e.getRandomLocation({fromMap:K.getInstance().humanPlayer.map}),targetingOrdnance:a}),console.log("ComputerPlayer.ts: missileTest: targeted missile ordnance:",a)})}}},{key:"navyBaseTest",value:function(){var e=this,a=w.getMapSummary({forMap:this.map});if(!(a.allNavyBases.length<1)){var t=a.allNavyBases[0];j.activateNavyBase({forBase:t}),console.log("ComputerPlayer.ts: navyBaseTest: Activated a Navy base:",{base:t}),t.ordnance.forEach(function(a){j.handleMissileTargeted({attackingPlayer:e,atMapLocation:e.getRandomLocation({fromMap:K.getInstance().humanPlayer.map}),targetingOrdnance:a})})}}},{key:"airBaseTest",value:function(){var e=this,a=w.getMapSummary({forMap:this.map});if(!(a.allAirBases.length<1)){var t=a.allAirBases[0];j.activateAirBase({forBase:t}),console.log("ComputerPlayer.ts: airBaseTest: Activated an air base:",{base:t}),t.ordnance.forEach(function(a){j.handleMissileTargeted({attackingPlayer:e,atMapLocation:e.getRandomLocation({fromMap:K.getInstance().humanPlayer.map}),targetingOrdnance:a})})}}},{key:"radarTest",value:function(){console.log("ComputerPlayer.ts: radarTest: entering.");var e=w.getMapSummary({forMap:this.map});if(!(e.allRadarBases.length<1)){console.log("ComputerPlayer.ts: radarTest: testing radar1.");var a=e.allRadarBases[0];if(a.setModeOfOperation({mode:"Active"}),j.activateRadarBase({forBase:a}),!(e.allRadarBases.length<2)){console.log("ComputerPlayer.ts: radarTest: testing radar2.");var t=e.allRadarBases[1];t.setModeOfOperation({mode:"Passive"}),j.activateRadarBase({forBase:t})}}}},{key:"calculateCurrentSentiment",value:function(){var e,a=K.getInstance(),t=a.humanPlayer.map.getAllMilitaryBases().filter(function(e){return e.myMapLocation.enemyVisibility>p.PCT_VISIBLE_SENTIMENT_THRESHOLD}).length,n=Math.ceil((a.gameYear-y.GameStartYear)*p.EXPECTED_BASE_COUNT_FACTOR);return e=n>2*t?"Falling Behind":n>3*t?"Underinformed":"Confident",console.log("ComputerPlayer.ts: calculateCurrentSentiment: suspected bases, expected bases:",{sentiment:e,expectedBaseCount:n,suspected:t}),e}},{key:"playPeacefulTurn",value:function(){y.getAllowedMoves().strategicOptions;var e=this.calculateCurrentSentiment(),a=this.sentimentMap.get(e),t=h.throwDice({hiNumberMinus1:99}),n=t>=a.percentDeclareWarStart?"Declare War":t>=a.percentSpyStart?"Spy":"Build";console.log("ComputerPlayer: playTurn: my strategic choice is:",n),"Build"===n?(j.spyOnPlayer({targetPlayer:K.getInstance().humanPlayer,spyLevel:1}),this.buildBases({numberToBuild:2,allowedBases:y.getAllowedMoves().tacticalOptions})):"Spy"===n?(j.spyOnPlayer({targetPlayer:K.getInstance().humanPlayer,spyLevel:2}),this.buildBases({numberToBuild:1,allowedBases:y.getAllowedMoves().tacticalOptions})):"Declare War"===n?console.log("ComputerPlayer.ts: playTurn: Declaring war!"):console.log("ComputerPlayer.ts: playTurn: skipping my turn.")}},{key:"buildBases",value:function(e){console.log("ComputerPlayer.ts: buildBases: Entering, will build ".concat(e.numberToBuild," bases."));for(var a=0;a<e.numberToBuild;a++){var t=h.pickRandomFromArray({sourceArray:e.allowedBases});console.log("ComputerPlayer.ts: buildBases: Entering, will build base:",t);var n=this.getRandomLocation({fromMap:this.map}),r=P.getInstance().createNewBase({baseType:t,atLocation:n});r&&n.placeItem({itemToPlace:r})}this.map.logDetailedMapToConsole()}},{key:"getRandomLocation",value:function(e){var a=h.throwDice({hiNumberMinus1:9}),t=h.throwDice({hiNumberMinus1:9});return e.fromMap.map[a][t]}}]),a}(g);H.testGuard=!1;var U=function(e){function a(){var e;return Object(o.a)(this,a),(e=Object(c.a)(this,Object(u.a)(a).call(this,{isHuman:!0}))).totalCausualties=0,e.map=new x({sizeX:10,sizeY:10,ownerLabel:"Human",owningPlayer:Object(m.a)(Object(m.a)(e))}),e.Name="Human",e.declaredWar=!1,e.totalFunctionalActiveRadarStations=0,e.totalFunctionalPassiveRadarStations=0,e.totalCausualties=0,w.createTestBases({onMap:e.map}),e}return Object(d.a)(a,e),a}(g),Y=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"getRandomComputerPlayerName",value:function(){return h.pickRandomFromArray({sourceArray:this.allComputerNames})}}]),e}();Y.allComputerNames=["The Engine","Games Machine","Joe","MARAX","EPICAC","EMSIAC","The Prime Radiant","Mark V","Karl","Mimi","Gold","Bossy","The City Fathers","Multivac","The Central Computer","Vulcan 2","Vulcan 3","Great Coordinator","Merlin","GENiE","Colossus","Guardian","Frost","The Ox","Supreme","ZORAC","Deep Thought","Ghostwheel","Com Pewter","Mother","C Cube","Glooper","Lobsang","Hal"];var K=function(e){function a(){var e;return Object(o.a)(this,a),(e=Object(c.a)(this,Object(u.a)(a).call(this))).isPeacetime=!0,e.isWartime=!1,e.turn=0,e}return Object(d.a)(a,e),Object(l.a)(a,[{key:"gameYear",get:function(){return this.turn+y.GameStartYear}}]),Object(l.a)(a,[{key:"initializeGame",value:function(){this.computerPlayer=new H,this.computerPlayer.Name=Y.getRandomComputerPlayerName(),this.humanPlayer=new U,this.currentPlayer=this.humanPlayer}},{key:"startGame",value:function(){j.startClock()}}],[{key:"getInstance",value:function(){return this.instance||(this.instance=new a,this.instance.initializeGame()),this.instance}}]),a}(function e(){Object(o.a)(this,e)}),z=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).idx=0,n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"showMessage",value:function(e){var a=this,t=document.getElementById(e);t&&(t.innerHTML="&nbsp;"),this.idx=0;var n=setInterval(function(){t&&(t.innerHTML=a.props.tickerMessage.substring(0,a.idx++)+"\u2588")},this.props.tickerInterval);setTimeout(function(){clearInterval(n),t&&(t.innerHTML=a.props.tickerMessage),a.props.onRenderCompleteCallback&&a.props.onRenderCompleteCallback()},this.props.tickerInterval*this.props.tickerMessage.length+3*this.props.tickerInterval)}},{key:"render",value:function(){var e=this,t="ticker_".concat(a.nextHtmlID++);return setTimeout(function(){e.showMessage(t)},50),r.a.createElement("span",{id:t})}}]),a}(n.Component);z.nextHtmlID=0;var X=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).state={yearMessage:""},j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"handleGamestateChange",value:function(e){"Advance Turn"!==e.details.changeLabel&&"War Declared"!==e.details.changeLabel||this.forceUpdate()}},{key:"render",value:function(){console.log("GameHeaderComponent: render: Entering.");var e=K.getInstance();return r.a.createElement("div",{className:"gameYearContainer"},e.isPeacetime?r.a.createElement(z,{tickerInterval:29,tickerMessage:"The year was ".concat(e.gameYear,", a time of ").concat(e.isPeacetime?"peace":"war!")}):r.a.createElement(z,{tickerInterval:25,tickerMessage:"The year was ".concat(e.gameYear,", where a state of WAR existed in the world.")}))}}]),a}(n.Component),V=t(15),q=t(8),$=function e(){Object(o.a)(this,e)};$.GameButton=Object(V.withStyles)({root:{borderRadius:3,border:0,color:"#FFB000",height:48,padding:"0 30px",boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)"},label:{textTransform:"capitalize"}})(q.a);var J=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).uiIdx=0,n.uiKey=function(){return n.uiIdx++},n.emptyManifestSelection={buildWhat:null,buildWhere:null,didBuild:!1,buildResultText:null},n.state={buildManifest:[]},j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"handleGamestateChange",value:function(e){}},{key:"componentDidMount",value:function(){this.setState({buildManifest:new Array(this.props.totalAllowedToBuild).fill(this.emptyManifestSelection)})}},{key:"handleDropResult",value:function(e){console.log("BuidManifestComponent: handleDropResult: drop finished, result:",e.result),this.setState({buildManifest:this.state.buildManifest.reduce(function(a,t,n){if(n===e.result.manifestIndex){var r={buildWhat:null,buildWhere:null,didBuild:e.result.didSucceed,buildResultText:e.result.message};return console.log("BuidManifestComponent: handleDropResult: updated manifest:",{updatedManifest:r}),a.concat(r)}return a.concat(t)},[])})}},{key:"render",value:function(){var e=this;console.log("BuildManifestComponent: render: Entering with props and state:",{props:this.props,state:this.state});var a=function(a){return e.props.allowedBasesToBuild.map(function(n,i){return r.a.createElement("span",{key:e.uiKey(),draggable:!0,onDragStart:function(t){return function(a){console.log("BuildManifestComponent: tacticalOptionsMarkup: onDragStart: e, ab:",{e:a.dragEvent,ab:a.baseType,manifestIndex:a.manifestIndex}),a.dragEvent.dataTransfer.setData(p.DROPTYPE,p.BUILD_DROP),a.dragEvent.dataTransfer.setData(p.BASETYPE,a.baseType),a.dragEvent.dataTransfer.setData(p.MANIFESTINDEX,a.manifestIndex.toString()),window[p.NOTIFY_BUILD_RESULT_CALLBACK_NAME]=e.handleDropResult.bind(e)}({baseType:n,dragEvent:t,manifestIndex:a.forManifestIndex})},onDragEnd:function(e){console.log("BuildManifestComponent: tacticalOptionsMarkup: onDragEnd: e, ab:",{e:e,ab:n})}},t({forBaseType:n}))})},t=function(e){var a="".concat(e.forBaseType," base"),t="images/baseTokens/".concat(e.forBaseType,"base.png");return r.a.createElement("span",{className:"allowedBase"},r.a.createElement("img",{src:t,width:"20",height:"20",title:a})," ",e.forBaseType)},n=function(t,n){return r.a.createElement("li",{key:e.uiKey()},t.didBuild?t.buildResultText:a({forManifestIndex:n}),t.buildResultText&&!t.didBuild?t.buildResultText:null)};return r.a.createElement(r.a.Fragment,null,e.props.totalAllowedToBuild>1?r.a.createElement("div",null,r.a.createElement(z,{tickerInterval:20,tickerMessage:"You are allowed to build ".concat(e.props.totalAllowedToBuild," ").concat(1==e.props.totalAllowedToBuild?"base":"bases",".")})):r.a.createElement("div",null,"You are allowed to build 1 base."),r.a.createElement("div",null,r.a.createElement("h5",null,r.a.createElement(z,{tickerInterval:25,tickerMessage:"Build manifest:"})),(console.log("BuildManifestComponent: manifestMarkup: building up a selection:",e.state.buildManifest),r.a.createElement("ol",null," ",e.state.buildManifest.map(function(e,a){return n(e,a)})))),this.state.buildManifest.filter(function(e){return e.didBuild}).length===this.state.buildManifest.length?r.a.createElement("div",null,"All base assignments complete.",r.a.createElement($.GameButton,{onClick:function(){j.finishHumanTurn()}},"Finish Turn")):null)}}]),a}(n.Component),Z=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).state={},n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){console.log("AbmBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"activateAbmBase",value:function(){j.activateAbmBase({forBase:this.props.base}),this.forceUpdate()}},{key:"render",value:function(){var e=this,a=this.props.base,t=r.a.createElement(r.a.Fragment,null,r.a.createElement($.GameButton,{onClick:function(){return e.activateAbmBase()}},"Enable Active Tracking")),n=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Actively tracking incoming missiles and bombers, ".concat(a.totalMissiles," missiles remain in arsenal."))),i=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Spinning up...")),s=function(e){return r.a.createElement("div",null,r.a.createElement("span",null,"".concat(a.WorldObjectLabel,": ").concat(a.Name)),e)},o=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"ABM base $",a.Name," was destroyed."));return a.wasDestroyed?o:this.props.base.isReceivingOrders?this.props.base.isTracking?s(n):s(t):s(i)}}]),a}(n.Component),Q=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).state={didActivate:!1},n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){console.log("RadarBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"render",value:function(){var e=this,a=this.props.base,t=function(t){a.setModeOfOperation(t),e.setState({didActivate:!0}),e.handleRaderPulser({forBase:a}),j.activateRadarBase({forBase:a})},n=r.a.createElement(r.a.Fragment,null,r.a.createElement($.GameButton,{onClick:function(){return t({mode:"Active"})}},"Go Active"),r.a.createElement($.GameButton,{onClick:function(){return t({mode:"Passive"})}},"Go Passive")),i=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Mode: ",a.modeOfOperation," Tracking")),s=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Warming up...")),o=function(e){return r.a.createElement("div",null,r.a.createElement("span",null,"".concat(a.WorldObjectLabel,": ").concat(a.Name)),e)},l=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Radar base $",a.Name," was destroyed."));return a.wasDestroyed?l:this.props.base.isReceivingOrders?"Inactive"===this.props.base.modeOfOperation?o(n):o(i):o(s)}},{key:"handleRaderPulser",value:function(e){var a=document.getElementById(w.getMapLocationHtmlID(e.forBase.myMapLocation)),t=e.forBase.modeOfOperation,n="".concat("Active"===t?"active":"passive","RadarPulseUp"),r="".concat("Active"===t?"active":"passive","RadarPulseDown");setInterval(function(){a&&(a.classList.remove(n),a.classList.remove(r),a.classList.add(n),setTimeout(function(){a.classList.add(r)},3e3))},6e3)}}]),a}(n.Component),ee=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).nextUIKey=0,n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"uiKey",value:function(){return"OrdnanceTargetingComponent_".concat(this.nextUIKey++)}},{key:"componentDidMount",value:function(){j.registerGamestateWatcher({watcher:this})}},{key:"handleGamestateChange",value:function(e){"Location Nuked"===e.details.changeLabel&&this.forceUpdate()}},{key:"render",value:function(){var e=this,a=this.props.ordnanceLabel,t=function(t){return r.a.createElement("div",{key:e.uiKey(),draggable:!0,onDragStart:function(a){return function(a){console.log("OrdnanceTargetingComponent: tacticalOptionsMarkup: onDragStart: e, index:",{e:a.dragEvent,manifestIndex:a.missileIndex}),a.dragEvent.dataTransfer.setData("dropType",p.TARGET_MISSILE_DROP),a.dragEvent.dataTransfer.setData("missileIndex",a.missileIndex.toString()),window[p.NOTIFY_TARGET_RESULT_CALLBACK_NAME]=e.handleDropResult.bind(e)}({dragEvent:a,missileIndex:t.forMissileIndex})}},"".concat(a," ").concat(t.forMissileIndex,"."))};return this.props.parentBase.ordnance.map(function(n,i){return n.wasIntercepted?(s={forMissileIndex:i},r.a.createElement("div",{key:e.uiKey()},"".concat(a," ").concat(s.forMissileIndex," was shot down."))):n.wasConsumed?function(t){return r.a.createElement("div",{key:e.uiKey()},"".concat(a," ").concat(t.forMissileIndex," hit its target."))}({forMissileIndex:i}):null!==n.myTarget?function(t){return r.a.createElement("div",{key:e.uiKey()},"".concat(a," ").concat(t.forMissileIndex," is targeted."))}({forMissileIndex:i}):t({forMissileIndex:i});var s})}},{key:"handleDropResult",value:function(e){console.log("OrdnanceTargetingComponent: handleDropResult: drop finished, result:",e.result);var a=this.props.parentBase.myMapLocation.myMap.owner;j.handleMissileTargeted({attackingPlayer:"Computer"===a?K.getInstance().computerPlayer:K.getInstance().humanPlayer,atMapLocation:e.result.targetedLocation,targetingOrdnance:this.props.parentBase.ordnance[e.result.missileIndex]}),this.props.parentBase.isAllOrdnanceTargeted()?this.props.targetingCompleteCallback():this.forceUpdate()}}]),a}(r.a.Component),ae=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).state={isTargetingMissiles:!1},n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"activateNavyBase",value:function(){console.log("NavyBaseComponent: activateNavyBase: entering."),this.setState({isTargetingMissiles:!0})}},{key:"render",value:function(){var e=this,a=this.props.base.ordnance,t=this.props.base,n=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Targeting ".concat(a.length," missiles."),r.a.createElement("br",null)),r.a.createElement(ee,{ordnanceLabel:"Submarine missile",parentBase:this.props.base,targetingCompleteCallback:function(){return e.setState({isTargetingMissiles:!1})}})),i=r.a.createElement(r.a.Fragment,null,r.a.createElement($.GameButton,{onClick:function(){return e.activateNavyBase()}},"Target ".concat(a.length," Missiles"))),s=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"".concat(a.length," en route."))),o=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Setting sail...")),l=function(e){return r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"".concat(t.WorldObjectLabel,": ").concat(t.Name)),e)},c=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Nave Base $",t.Name," was destroyed."));return t.wasDestroyed?c:this.state.isTargetingMissiles?l(n):t.isReceivingOrders?t.isAllOrdnanceTargeted()?l(s):l(i):l(o)}}]),a}(n.Component),te=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).state={isTargetingMissiles:!1},n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){console.log("MissileBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"activateMissileBase",value:function(){console.log("MissileBaseComponent: activateMissileBase: entering."),j.activateMissileBase({forBase:this.props.base}),this.setState({isTargetingMissiles:!0})}},{key:"render",value:function(){var e=this,a=this.props.base,t=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Targeting ".concat(a.ordnance.length," missiles."),r.a.createElement("br",null)),r.a.createElement(ee,{ordnanceLabel:"ICBM",parentBase:a,targetingCompleteCallback:function(){return e.setState({isTargetingMissiles:!1})}})),n=r.a.createElement(r.a.Fragment,null,r.a.createElement($.GameButton,{onClick:function(){return e.activateMissileBase()}},"Target ".concat(a.ordnance.length," Missiles"))),i=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"".concat(a.ordnance.length," en route."))),s=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Fueling missiles...")),o=function(e){return r.a.createElement("div",null,r.a.createElement("span",null,"".concat(a.WorldObjectLabel,": ").concat(a.Name)),e)},l=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Missile base $",a.Name," was destroyed."));return a.wasDestroyed?l:this.state.isTargetingMissiles?o(t):a.isReceivingOrders?a.isAllOrdnanceTargeted()?o(i):o(n):o(s)}}]),a}(n.Component),ne=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).state={isTargetingBombers:!1},n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){console.log("AirBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"activateAirBase",value:function(){console.log("AirbaseComponent: activateAirBase: entering."),this.setState({isTargetingBombers:!0})}},{key:"handleAllOrdnanceTargeted",value:function(){this.setState({isTargetingBombers:!1})}},{key:"render",value:function(){var e=this;console.log("AirBaseComponent: render: entering with state and props:",{state:this.state,props:this.props});var a=this.props.base,t=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Targeting ".concat(a.ordnance.length," bombers."),r.a.createElement("br",null)),r.a.createElement(ee,{ordnanceLabel:"Bomber",parentBase:a,targetingCompleteCallback:function(){return e.setState({isTargetingBombers:!1})}})),n=r.a.createElement(r.a.Fragment,null,r.a.createElement($.GameButton,{onClick:function(){return e.activateAirBase()}},"Scramble ".concat(a.totalFighters," fighters and ").concat(a.ordnance.length," bombers."))),i=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"".concat(a.totalFighters," on patrol. ").concat(a.ordnance.length," bombers en route to their target."))),s=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Flight crews prepping...")),o=function(e){return r.a.createElement("div",null,r.a.createElement("span",null,"".concat(a.WorldObjectLabel,": ").concat(a.Name)),e)},l=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Air base $",a.Name," was destroyed."));return a.wasDestroyed?l:this.state.isTargetingBombers?o(t):a.isReceivingOrders?a.isAllOrdnanceTargeted()?o(i):o(n):o(s)}}]),a}(n.Component),re=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).state={},n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){console.log("ArmyBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"decampArmy",value:function(){j.activateArmyBase({forBase:this.props.base}),this.forceUpdate()}},{key:"render",value:function(){var e=this,a=this.props.base,t=r.a.createElement(r.a.Fragment,null,r.a.createElement($.GameButton,{onClick:function(){return e.decampArmy()}},"Decamp")),n=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Operating...")),i=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Organizing...")),s=function(e){return r.a.createElement("div",null,r.a.createElement("span",null,"".concat(a.WorldObjectLabel,": ").concat(a.Name)),e)},o=r.a.createElement(r.a.Fragment,null,r.a.createElement("span",null,"Army base $",a.Name," was destroyed."));return a.wasDestroyed?o:a.isReceivingOrders?a.isDecamped?s(n):s(t):s(i)}}]),a}(n.Component),ie=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).uiKeyNbr=0,n.getBaseUI=function(e){var a=e.forBase.WorldObjectLabel;return"ABM"===a?r.a.createElement(Z,{key:n.uiKey(),base:e.forBase}):"Army"===a?r.a.createElement(re,{key:n.uiKey(),base:e.forBase}):"Air"===a?r.a.createElement(ne,{key:n.uiKey(),base:e.forBase}):"Missile"===a?r.a.createElement(te,{key:n.uiKey(),base:e.forBase}):"Navy"===a?r.a.createElement(ae,{key:n.uiKey(),base:e.forBase}):r.a.createElement(Q,{key:n.uiKey(),base:e.forBase})},n.state={isWaitingForSelection:!1,activeBases:[],inactiveBases:[],destroyedBases:[]},j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"handleGamestateChange",value:function(e){if("Location Nuked"===e.details.changeLabel){var a=this.state.activeBases.filter(function(e){return e.baseEntity.wasDestroyed}),t=this.state.inactiveBases.filter(function(e){return e.baseEntity.wasDestroyed});this.setState({destroyedBases:this.state.destroyedBases.concat(a).concat(t),activeBases:this.state.activeBases.filter(function(e){return!e.baseEntity.wasDestroyed}),inactiveBases:this.state.inactiveBases.filter(function(e){return!e.baseEntity.wasDestroyed})})}"Tick"===e.details.changeLabel&&this.state.inactiveBases.length>0&&(this.state.inactiveBases[0].baseEntity.activate(),this.handleBaseActivatedAnimation({forBase:this.state.inactiveBases[0]}),this.setState({activeBases:this.state.activeBases.concat(this.state.inactiveBases[0]),inactiveBases:this.state.inactiveBases.slice(1)}))}},{key:"handleBaseActivatedAnimation",value:function(e){var a=document.getElementById(w.getMapLocationHtmlID(e.forBase.baseEntity.myMapLocation));a&&(a.classList.remove("activatedBase"),a.classList.add("activatedBase"))}},{key:"componentDidMount",value:function(){var e=this;this.props.registerForHumanPlayerMapClicks({ui:this});var a=this.props.player.map.getAllMilitaryBases().map(function(a){return{baseEntity:t=a,ui:e.getBaseUI({forBase:t})};var t});this.setState({inactiveBases:a})}},{key:"uiKey",value:function(){return"BaseActivatorComponent_".concat(this.uiKeyNbr++)}},{key:"handlePlayerMapClick",value:function(e){console.log("BaseActivatorComponent: handlePlayerMapClick: Got a click! args:",{args:e})}},{key:"render",value:function(){console.log("BaseActivatorComponent: render: Entering with props and state:",{props:this.props,state:this.state});return r.a.createElement("div",{className:"baseActivatorContainer"},r.a.createElement("div",null,"There exists a state of war."),r.a.createElement("div",null,r.a.createElement("h5",null,"Active bases (",this.state.activeBases.length,")")),this.state.activeBases.map(function(e){return e.ui}),r.a.createElement("div",null,r.a.createElement("h5",null,"Inactive bases (",this.state.inactiveBases.length,")")),this.state.inactiveBases.map(function(e){return e.ui}),r.a.createElement("div",null,r.a.createElement("h5",null,"Destroyed bases (",this.state.destroyedBases.length,")")),this.state.destroyedBases.map(function(e){return e.ui}))}}]),a}(n.Component),se=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).uiIdx=0,n.uiKey=function(){return"useractions".concat(n.uiIdx++)},n.baseActivatorComponent=null,n.actionHandlers=[{actionHandler:n.handleFinishTurn,playerChoice:"Skip"},{actionHandler:n.handleBuild,playerChoice:"Build"},{actionHandler:n.handleDeclareWar,playerChoice:"Declare War"},{actionHandler:n.handleActivate,playerChoice:"Activate"},{actionHandler:n.handleActivate,playerChoice:"Activate Base"},{actionHandler:n.handleSpy,playerChoice:"Spy"},{actionHandler:n.notYetImplemented,playerChoice:"Sue for Peace"},{actionHandler:n.notYetImplemented,playerChoice:"Surrender"},{actionHandler:n.notYetImplemented,playerChoice:"ABM"},{actionHandler:n.notYetImplemented,playerChoice:"Air"},{actionHandler:n.notYetImplemented,playerChoice:"Army"},{actionHandler:n.notYetImplemented,playerChoice:"Missile"},{actionHandler:n.notYetImplemented,playerChoice:"Navy"},{actionHandler:n.notYetImplemented,playerChoice:"Radar"}],n.state={isSelectingLocation:!1,isMakingStrategicChoice:!0,isMakingTacticalChoice:!1,isBuilding:!1,tacticalChoice:null,strategicChoice:null,isWaitingForMyTurn:!1,isActivating:!1},j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"handlePlayerMapClick",value:function(e){console.log("UserActionsComponent: handlePlayerMapClick: Got a click! args:",{args:e}),this.baseActivatorComponent&&this.baseActivatorComponent.handlePlayerMapClick(e)}},{key:"getMoveChoiceLabels",value:function(){return y.getAllowedMoves()}},{key:"setInitialState",value:function(){this.setState({isBuilding:!1,isMakingStrategicChoice:!0,isMakingTacticalChoice:!1,isSelectingLocation:!1,tacticalChoice:null,strategicChoice:null,isWaitingForMyTurn:!1})}},{key:"componentDidMount",value:function(){this.props.registerMapListener({forUserComponent:this})}},{key:"handleGamestateChange",value:function(e){"Advance Turn"===e.details.changeLabel&&this.setInitialState(),"Computer Playing Its Turn"===e.details.changeLabel&&this.setState({isWaitingForMyTurn:!0}),"War Declared"===e.details.changeLabel&&this.setState({isActivating:!0,isMakingStrategicChoice:!1,isMakingTacticalChoice:!0})}},{key:"render",value:function(){var e=this,a=this.getMoveChoiceLabels().strategicOptions.map(function(a){return e.getChoiceButtonMarkup({forChoice:a})}),t=this.getMoveChoiceLabels().tacticalOptions.map(function(a){return e.getChoiceButtonMarkup({forChoice:a})});return this.state.isWaitingForMyTurn?r.a.createElement(z,{tickerInterval:10,tickerMessage:"Waiting for the computer to finish its move..."}):this.state.isMakingStrategicChoice?a:this.state.isBuilding?r.a.createElement(J,{allowedBasesToBuild:this.getMoveChoiceLabels().tacticalOptions,totalAllowedToBuild:y.getTotalBasesAllowedToBuild({basedOnStrategicChoice:this.state.strategicChoice})}):this.state.isActivating?r.a.createElement(ie,{player:this.props.player,registerForHumanPlayerMapClicks:function(a){return e.baseActivatorComponent=a.ui}}):t}},{key:"getChoiceButtonMarkup",value:function(e){var a=this.actionHandlers.filter(function(a){return a.playerChoice===e.forChoice})[0];if(!a){var t={msg:"UserActionsComponent: getChoiceButtonMarkup: Error: failed to get an action handler for the provided choice.",args:e};throw console.error(t),t}return r.a.createElement($.GameButton,{key:this.uiKey(),onClick:a.actionHandler.bind(this)},e.forChoice)}},{key:"handleDeclareWar",value:function(){console.log("UserActionsComponent: handleDeclareWar: Entering."),j.declareWar({declaringPlayer:this.props.player}),this.setState({isActivating:!0,isMakingStrategicChoice:!1,isMakingTacticalChoice:!0})}},{key:"handleBuild",value:function(){console.log("UserActionsComponent: handleBuild: Entering."),j.spyOnPlayer({targetPlayer:K.getInstance().computerPlayer,spyLevel:2}),this.setState({isMakingTacticalChoice:!0,isMakingStrategicChoice:!1,isBuilding:!0,strategicChoice:"Build",tacticalChoice:null})}},{key:"handleActivate",value:function(){this.setState({isActivating:!0,isMakingStrategicChoice:!1,isMakingTacticalChoice:!0})}},{key:"handleSpy",value:function(){j.spyOnPlayer({targetPlayer:K.getInstance().computerPlayer,spyLevel:2}),this.setState({isMakingTacticalChoice:!0,isMakingStrategicChoice:!1,isBuilding:!0,strategicChoice:"Spy",tacticalChoice:null})}},{key:"handleFinishTurn",value:function(){this.setState({isSelectingLocation:!1,isMakingStrategicChoice:!0,isMakingTacticalChoice:!1,isBuilding:!1}),j.finishHumanTurn()}},{key:"notYetImplemented",value:function(){console.log("UserActionComponent: notYetImplemented: entering, advancing turn."),j.advanceTurn(),this.setState({isSelectingLocation:!1,isMakingStrategicChoice:!0,isMakingTacticalChoice:!1,isBuilding:!1})}}]),a}(n.Component),oe=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).nextUIKeyVal=0,n.uiKey=function(){return"GLC_".concat(n.nextUIKeyVal++)},n.queuedMessages=[],n.state={oldMessages:[],currentMessage:""},n.ignoreChangeLabels=["Tick"],n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){j.registerGamestateWatcher({watcher:this}),this.setState({currentMessage:"Initialzing..."})}},{key:"onTickerCompleted",value:function(){this.setState({oldMessages:[this.state.currentMessage].concat(this.state.oldMessages)}),this.queuedMessages.length>0?this.setState({currentMessage:this.queuedMessages.shift()}):this.setState({currentMessage:""})}},{key:"loggableMessageFromGameStateChange",value:function(e){if("Computer Playing Its Turn"===e.gsc.changeLabel)return e.gsc.miscDetails+" is playing its turn.";if("New base constructed"===e.gsc.changeLabel){if(e.gsc.relatedBase){var a=e.gsc.relatedBase.WorldObjectLabel,t=e.gsc.relatedBase.Name;return"Constructed a new ".concat(a," base: ").concat(t)}return"Cosntructed a new base but I don't know what kind!"}return e.gsc.changeLabel}},{key:"handleGamestateChange",value:function(e){this.ignoreChangeLabels.filter(function(a){return a===e.details.changeLabel}).length>0||(this.queuedMessages=this.queuedMessages.concat(this.loggableMessageFromGameStateChange({gsc:e.details})),this.state.currentMessage.length>0||this.setState({currentMessage:this.queuedMessages?this.queuedMessages.shift():""}))}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"gameLogContainer"},r.a.createElement("div",null,r.a.createElement("br",null),"-- Activities Log --"),r.a.createElement("div",null,this.state.currentMessage&&this.state.currentMessage.length>0?r.a.createElement(z,{tickerInterval:25,tickerMessage:this.state.currentMessage,onRenderCompleteCallback:this.onTickerCompleted.bind(this)}):null),r.a.createElement("div",{key:this.uiKey()},this.state.oldMessages.map(function(a){return r.a.createElement("div",{key:e.uiKey()},a)})))}}]),a}(n.Component),le=function(e){function a(e,t){return Object(o.a)(this,a),Object(c.a)(this,Object(u.a)(a).call(this,e,t))}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){var e=this,a=this.props.mapItem;return r.a.createElement(r.a.Fragment,null,w.GetMapLocationSingleCharacterCode({forMapLocation:a}),function(){var a=e.props.mapItem.nuclearStrikes;return 1===a?"*":2===a?"**":3===a?"***":""}())}}]),a}(r.a.Component),ce=t(10),ue=t.n(ce),de=(t(261),function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).state={summarizedMap:w.initialSummary},n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){j.registerGamestateWatcher({watcher:this}),this.setState({summarizedMap:w.getMapSummary({forMap:this.props.mapToSummarize})})}},{key:"render",value:function(){var e=this.state.summarizedMap;return r.a.createElement("div",{className:"mapSummaryContainer"},r.a.createElement("div",{className:"playerName"},function(e){var a="- - - - - - - - - - - - - - - - - - ";if(e.playerName.length>=44)return e.playerName;var t=.5*(44-e.playerName.length);return a.substring(0,t)+" "+e.playerName+" "+a.substr(0,t)}({playerName:this.props.mapToSummarize.owningPlayer.Name})),r.a.createElement("div",null,"Population: ",r.a.createElement(ue.a,{format:"(,ddd)",duration:5e3,value:e.totalPopulation}),"\xa0 Casualties: ",r.a.createElement(ue.a,{format:"(,ddd)",duration:5e3,value:this.props.mapToSummarize.owningPlayer.totalCausualties})),r.a.createElement("div",null,"Bases: A: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.allAbmBases.length}),"| R: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.allRadarBases.length}),"| B: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.allAirBases.length}),"| T: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.allArmyBases.length}),"| M: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.allMissileBases.length}),"| N: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.allNavyBases.length})),K.getInstance().isWartime?r.a.createElement("div",null,"Ordnance: A: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.totalAbmMissilesOnLine}),"| B: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.totalBombersInFlight}),"| S: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.totalSubMissilesOnLine}),"| F: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.totalFightersOnPatrol}),"| M: ",r.a.createElement(ue.a,{format:"d",duration:5e3,value:e.totalICBMsOnLine})):null)}},{key:"handleGamestateChange",value:function(e){"Base Activated"!==e.details.changeLabel&&"Advance Turn"!==e.details.changeLabel&&"Location Nuked"!==e.details.changeLabel||(console.log("MapSummaryComponent: handleGameStateChange: got a game state change, Base Activated."),this.setState({summarizedMap:w.getMapSummary({forMap:this.props.mapToSummarize})}))}}]),a}(r.a.Component)),me=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).handleMapLocationHover=function(e){n.setState({hoverMapLocation:e.onMapLocation})},n.state={hoverMapLocation:null},n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){this.props.registerHoverListener({hoverListener:this.handleMapLocationHover.bind(this)})}},{key:"render",value:function(){return this.state.hoverMapLocation?r.a.createElement(r.a.Fragment,null,r.a.createElement("p",null,"map location: ",this.state.hoverMapLocation.uniqueID),r.a.createElement("p",null,"map pop: ",this.state.hoverMapLocation.population),r.a.createElement("p",null,"map location: ",this.state.hoverMapLocation.Contents.Name)):null}}]),a}(r.a.Component),ge=function(e){function a(e,t){var n;return Object(o.a)(this,a),(n=Object(c.a)(this,Object(u.a)(a).call(this,e,t))).uiIdx=0,n.state={},console.log("MapComponent: Entering with props and state:",{props:e,state:t}),j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(a,e),Object(l.a)(a,[{key:"registerHoverListener",value:function(e){console.log("MapComponent: hoverListenerRegistrationFunc: Entering with args:",e),this.notifyMapLocationHoveredOver=e.hoverListener}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"playerMapContainer"},r.a.createElement(de,{mapToSummarize:this.props.countryMap}),r.a.createElement(r.a.Fragment,null,r.a.createElement("table",{className:"mapContainer"},r.a.createElement("tbody",null,e.props.countryMap.map.map(function(a){return t=a,r.a.createElement("tr",{key:e.uiIdx++},t.map(function(a){return r.a.createElement("td",{key:e.uiIdx++,className:"mapCell",id:"".concat(e.getMapLocationHtmlID(a)),onMouseOver:function(t){console.log("MapComponent: onMousOver: entering, hover listener:",e.notifyMapLocationHoveredOver),e.notifyMapLocationHoveredOver&&(console.log("MapComponent: onMousOver: notifying listener."),e.notifyMapLocationHoveredOver({onMapLocation:a}))},onClick:function(){e.props.playerMapClickListener&&e.props.playerMapClickListener({location:a})},onDrop:function(t){t.preventDefault(),e.handleDrop({dropEvent:t,cell:a})},onDragLeave:function(t){e.handleLocationDragEvent({doLoc:a,eventType:"leave"}),t.preventDefault()},onDragOver:function(t){e.handleLocationDragEvent({doLoc:a,eventType:"over"}),t.preventDefault()}},r.a.createElement(le,{mapItem:a,key:e.uiIdx++}),a.isTargeted?r.a.createElement("span",null,"[T]"):null)}));var t}))),r.a.createElement(me,{registerHoverListener:e.registerHoverListener.bind(e)})))}},{key:"handleGamestateChange",value:function(e){var a=e.details.changeLabel;if("Advance Turn"===a)this.forceUpdate();else if("Map Location Targeted"===a)this.handleLocationTargeted({targetedLocation:e.details.relatedLocation});else if("Base Activated"===a){console.log("MapComponent.tsx: handleGameStateChange: got a Base Activate updated, details:",e);var t=e.details.relatedBase;t&&this.handleBaseActivated({nukedLocation:t.myMapLocation})}else"Location Nuked"===e.details.changeLabel?this.handleLocationNuked({nukedLocation:e.details.relatedLocation}):"ICBM Intercepted"!==e.details.changeLabel&&"Submarine Missile Shot Down By ABM"!==e.details.changeLabel&&"Bomber was shot down by ABM"!==e.details.changeLabel&&"Bomber was shot down by Fighter"!==e.details.changeLabel||this.handleLocationDetargeted({detargetedLocation:e.details.relatedLocation})}},{key:"handleBaseActivated",value:function(e){if(e.nukedLocation){var a=document.getElementById(this.getMapLocationHtmlID(e.nukedLocation));a&&a.classList.add("activatedBase")}}},{key:"handleLocationTargeted",value:function(e){if(e.targetedLocation){var a=document.getElementById(this.getMapLocationHtmlID(e.targetedLocation));a&&a.classList.add("targetedMapLocation")}}},{key:"handleLocationDetargeted",value:function(e){if(e.detargetedLocation){var a=document.getElementById(this.getMapLocationHtmlID(e.detargetedLocation));a&&a.classList.remove("targetedMapLocation")}}},{key:"handleLocationNuked",value:function(e){if(e.nukedLocation){var a=document.getElementById(this.getMapLocationHtmlID(e.nukedLocation));if(a){var t=e.nukedLocation;a.classList.add(["nukedOnce","nukedTwice","nukedThrice"][t.nuclearStrikes>=3?2:t.nuclearStrikes-1]),this.handleLocationDetargeted({detargetedLocation:e.nukedLocation})}}}},{key:"handleLocationDragEvent",value:function(e){if(console.log("MapComponent.ts: handleLocationDraggedOver: Entering, args:",e),e.doLoc){console.log("MapComponent.ts: handleLocationDraggedOver: Got a nuked location OK.");var a=document.getElementById(this.getMapLocationHtmlID(e.doLoc));a&&(console.log("MapComponent.ts: handleLocationDraggedOver: fiddling with nuke classes."),"over"===e.eventType?a.classList.add("mapLocationDraggedOver"):a.classList.remove("mapLocationDraggedOver"))}}},{key:"handleDrop",value:function(e){console.log("MapComponent.tsx: handleDrop: Got a drop event on a cell:",{event:e.dropEvent,cell:e.cell,baseType:e.dropEvent.dataTransfer.getData("baseType"),manifestIndex:e.dropEvent.dataTransfer.getData("manifestIndex"),dropType:e.dropEvent.dataTransfer.getData("dropType")}),e.dropEvent.dataTransfer.getData("dropType")===p.BUILD_DROP?(this.handleBuildDrop(e),this.forceUpdate()):e.dropEvent.dataTransfer.getData("dropType")===p.TARGET_MISSILE_DROP?this.handleTargetDrop(e):console.log("MapComponent: handleDrop: got an unknown drop type:",e.dropEvent.dataTransfer.getData("dropType"))}},{key:"handleTargetDrop",value:function(e){var a=window[p.NOTIFY_TARGET_RESULT_CALLBACK_NAME];console.log("MapComponent.tsx: handleTargetDrop: Got a drop event on a cell:",{event:e.dropEvent,cell:e.cell,baseType:e.dropEvent.dataTransfer.getData("baseType"),manifestIndex:e.dropEvent.dataTransfer.getData("manifestIndex")}),this.handleLocationDragEvent({doLoc:e.cell,eventType:"leave"}),a({result:{didSucceed:!0,missileIndex:parseInt(e.dropEvent.dataTransfer.getData("missileIndex")),message:"Successfully targeted enemy sector ".concat(e.cell.uniqueID,"."),targetedLocation:e.cell}})}},{key:"handleBuildDrop",value:function(e){var a=window[p.NOTIFY_BUILD_RESULT_CALLBACK_NAME];if(console.log("MapComponent.tsx: handleBuildDrop: Got a drop event on a cell:",{event:e.dropEvent,cell:e.cell,baseType:e.dropEvent.dataTransfer.getData("baseType"),manifestIndex:e.dropEvent.dataTransfer.getData("manifestIndex")}),null!==e.cell.Contents&&y.canPlaceItemAtMapLocation({atLocation:e.cell,itemToCheck:e.cell.Contents.WorldObjectLabel,map:this.props.countryMap})){var t=P.getInstance().createNewBase({baseType:e.dropEvent.dataTransfer.getData(p.BASETYPE),atLocation:e.cell});t?(e.cell.placeItem({itemToPlace:t}),a({result:{didSucceed:!0,manifestIndex:parseInt(e.dropEvent.dataTransfer.getData("manifestIndex")),message:"".concat(t.WorldObjectLabel," base ").concat(t.Name," slated for construction.")}}),j.notifyNewBaseConstructed({forBaseType:t})):a({result:{didSucceed:!0,manifestIndex:parseInt(e.dropEvent.dataTransfer.getData("manifestIndex")),message:"unknown base type!."}})}else console.log("MapComponent: handleBuildDrop: You can't place an object there because of rules or it's not an empty location."),a({result:{didSucceed:!1,manifestIndex:parseInt(e.dropEvent.dataTransfer.getData("manifestIndex")),message:"You cannot build a base there because it is already occupied by another base or large population area."}})}},{key:"getMapLocationHtmlID",value:function(e){return w.getMapLocationHtmlID(e)}}]),a}(r.a.Component),pe=function e(){Object(o.a)(this,e)};pe.BUILD_VERSION="52 at 15:04:29.95 on Tue 04/14/2020";var he=function(e){function a(){var e,t;Object(o.a)(this,a);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(t=Object(c.a)(this,(e=Object(u.a)(a)).call.apply(e,[this].concat(r)))).userActionsComponent=null,t}return Object(d.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){K.getInstance().startGame()}},{key:"registerMapListener",value:function(e){this.userActionsComponent=e.forUserComponent}},{key:"playerMapClickListener",value:function(e){console.log("Game.tsx: playerMapClickListener: player clicked on a map location:",e.location),this.userActionsComponent&&this.userActionsComponent.handlePlayerMapClick(e)}},{key:"render",value:function(){var e=this,a=K.getInstance();return r.a.createElement(q.b,{container:!0,className:"gameDefaults gameContainer",alignContent:"center"},r.a.createElement(q.b,{item:!0,xs:12},r.a.createElement(X,null)),r.a.createElement(q.b,{item:!0,xs:4,className:"gameUILeftZone"},r.a.createElement(q.b,{container:!0,alignContent:"center"},r.a.createElement(ge,{countryMap:a.humanPlayer.map,playerMapClickListener:e.playerMapClickListener.bind(e)}))),r.a.createElement(q.b,{item:!0,xs:4,className:"gameUIMiddleZone"},r.a.createElement(se,{player:a.humanPlayer,mapClickListener:e.playerMapClickListener.bind(e),registerMapListener:e.registerMapListener.bind(e)}),r.a.createElement(oe,null)),r.a.createElement(q.b,{item:!0,xs:4,className:"gameUIRightZone"},r.a.createElement(ge,{countryMap:a.computerPlayer.map})),r.a.createElement("span",{className:"gameBuildInformation"},"Build version: ",pe.BUILD_VERSION,r.a.createElement("br",null),"View the source: ",r.a.createElement("a",{href:"https://github.com/pagalvin/rpsn5",target:"github"},"https://github.com/pagalvin/rpsn5")))}}]),a}(n.Component),ye=function(e){function a(){return Object(o.a)(this,a),Object(c.a)(this,Object(u.a)(a).apply(this,arguments))}return Object(d.a)(a,e),Object(l.a)(a,[{key:"render",value:function(){return r.a.createElement(q.c,null,r.a.createElement(q.b,{container:!0,justify:"center"},r.a.createElement(he,null)))}}]),a}(n.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(ye,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[164,2,1]]]);
//# sourceMappingURL=main.168571b1.chunk.js.map