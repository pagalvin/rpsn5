(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{164:function(e,t,a){e.exports=a(264)},169:function(e,t,a){},171:function(e,t,a){},264:function(e,t,a){"use strict";a.r(t);var n=a(0),i=a.n(n),r=a(26),s=a.n(r),o=(a(169),a(1)),l=a(2),c=a(4),u=a(3),d=a(5),m=(a(171),a(7)),h=function e(t){Object(o.a)(this,e),this.isHuman=t.isHuman,this.allTargetedOrdnanceItems=[],this.ordnanceItemsArrivingThisTick=[]},g=function e(){Object(o.a)(this,e)};g.GAME_VERSION=.1,g.NOTIFY_BUILD_RESULT_CALLBACK_NAME="rpsn_notifyBuildDragResult",g.NOTIFY_TARGET_RESULT_CALLBACK_NAME="rpsn_notifyTargetResult",g.MIN_INITIAL_FIGHTERS=1,g.MAX_INITIAL_FIGHTERS=4,g.MIN_INITIAL_BOMBERS=1,g.MAX_INITIAL_BOMBERS=4,g.MIN_ICBMS=1,g.MAX_ICBMS=4,g.MIN_SUB_MISSILES=1,g.MAX_SUB_MISSILES=3,g.BUILD_DROP="build",g.TARGET_MISSILE_DROP="target",g.FIRST_STRIKE_POPULATION_HIT_PCT=.9,g.SECOND_STRIKE_POPULATION_HIT_PCT=.5,g.THIRD_STRIKE_POPULATION_HIT_PCT=.25,g.PCT_VISIBLE_SENTIMENT_THRESHOLD=20,g.EXPECTED_BASE_COUNT_FACTOR=1.75,g.DROPCONSTANTS_DROPTYPE="dropType",g.DROPCONSTANTS_BASETYPE="baseType",g.DROPCONSTANTS_MANIFESTINDEX="manifestIndex",g.DROPCONSTANTS_MISSILEINDEX="missileIndex",g.ARMY_BASELABEL="Army",g.NAVY_BASELABEL="Navy",g.MISSILE_BASELABEL="Missile",g.ABM_BASELABEL="Abm",g.AIR_BASELABEL="Air",g.MIN_INITIAL_CITIES=5,g.MAX_INITIAL_CITIES=8,g.MIN_INITIAL_TOWNS=10,g.MAX_INITIAL_TOWNS=20,g.POPULATION_INCREASE_MODIFIER=.0105;var p=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"throwDice",value:function(e){return Math.floor(Math.random()*e.hiNumberMinus1)}},{key:"pickRandomFromArray",value:function(e){if(!e.sourceArray)throw"Rng.ts: pickRandomFromArray: error, source array is null or undefined.";if(0===e.sourceArray.length)throw"Rng.ts: pickRandomFromArray: error, source array is empty.";return e.sourceArray[this.throwDice({hiNumberMinus1:e.sourceArray.length})]}}]),e}(),y=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"canPlaceItemAtMapLocation",value:function(e){return"Navy"===e.itemToCheck?e.atLocation.doesHaveWaterBorder():!e.atLocation.Contents||"Rural"===e.atLocation.Contents.WorldObjectLabel}},{key:"getMissileArrivalTicks",value:function(){var e=p.throwDice({hiNumberMinus1:99});return e<33?1:e<85?2:3}},{key:"getTotalBasesAllowedToBuild",value:function(e){return"Build"===e.basedOnStrategicChoice?2:"Spy"===e.basedOnStrategicChoice?1:0}},{key:"getNuclearStrikePopulationKilled",value:function(e){var t=[g.FIRST_STRIKE_POPULATION_HIT_PCT,g.SECOND_STRIKE_POPULATION_HIT_PCT,g.THIRD_STRIKE_POPULATION_HIT_PCT],a=e.onMapLocation.Contents?e.onMapLocation.Contents.Population*t[e.onMapLocation.nuclearStrikes-1]:0;return Math.round(a)}},{key:"getAllowedMoves",value:function(){var e=["Build","Spy","Declare War","Skip"],t=["Activate","Sue for Peace","Surrender"],a=["Army","Navy","Air","Missile","Radar","ABM"],n=a.concat("ABM"),i=["Activate Base"],r=K.getInstance(),s=r.gameYear>1962?n:a;return r.isPeacetime?{strategicOptions:e,tacticalOptions:s}:{strategicOptions:t,tacticalOptions:i}}},{key:"getLocationDamage",value:function(e){return{strikeCount:e.locationAttacked.nuclearStrikes<3?e.locationAttacked.nuclearStrikes+=1:3,populationKilled:this.getNuclearStrikePopulationKilled({onMapLocation:e.locationAttacked}),attackingOrdnance:e.attackedBy}}}]),e}();y.GameStartYear=1945;var f=a(64),v=function e(t){Object(o.a)(this,e),this.myTarget=null,this.remainingTicksBeforeStriking=0,this.wasConsumed=!1,this.myID=e.nextOrdnanceID++,this.myBase=t.parentBase,this.wasIntercepted=!1,"Missile"===t.parentBase.WorldObjectLabel?this.myWorldLabel="ICBM":"Navy"===t.parentBase.WorldObjectLabel?this.myWorldLabel="Submarine Missile":this.myWorldLabel="Bomber"};v.nextOrdnanceID=0;var b=function(){function e(t){Object(o.a)(this,e),this.Name="",this.Population=p.throwDice({hiNumberMinus1:1e4})+1e4,this.wasDestroyed=!1,this.isReceivingOrders=!1,this.myMapLocation=t.atLocation,this.yearBuilt=t.yearBuilt}return Object(l.a)(e,[{key:"activate",value:function(){this.isReceivingOrders=!0}}]),e}(),B=function(){function e(){Object(o.a)(this,e),this.overflowBaseNameCounter=0,this.computerBaseCounter=0}return Object(l.a)(e,[{key:"generateBaseName",value:function(e){if(e.isHumanOwner){if(this.availableBaseNames.length>0){var t=j.getNameForNameableItem({fromNamesArr:this.availableBaseNames});return this.availableBaseNames=t.allOtherNames,t.baseName}return"Genearl Base ".concat(++this.overflowBaseNameCounter)}return"".concat(this.computerPrefix).concat(++this.computerBaseCounter)}}]),e}(),M=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).computerPrefix="A",a.availableBaseNames=["Sicilian","King's Pawn","Alekhine","Ruy Lopez","Indian Game","Hungarian Opening","King's Indian","French","Chigorin","Petroff","Queen's Gambit Declined","Philidor","Pirc","Modern","Queen's Gambit Accepted","Slav","Stonewall","Benoni","Tarrasch","Dutch","Englund","Gr\xfcnfeld"],a}return Object(d.a)(t,e),Object(l.a)(t,null,[{key:"getInstance",value:function(){return this.instance||(this.instance=new t),this.instance}}]),t}(B),O=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).WorldObjectLabel="ABM",a.baseNameFactory=M.getInstance(),a.Name=a.baseNameFactory.generateBaseName({isHumanOwner:e.atLocation.myMap.owningPlayer.isHuman}),a.totalMissiles=0,a.isTracking=!1,a.isReceivingOrders=!1,a}return Object(d.a)(t,e),t}(b),T=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).computerPrefix="R",a.availableBaseNames=["Hertz","Maxwell","H\xfclsmeyer","Marconi","Franklin","Watt","Tizard","Wimperis","Wilkins","Bowan","Rowe","Lindemann","Dowding","Randall","Boot","Lewis","Butement","Pollard","Worlledge","Paris","Erbsl\xf6h","Willisen","Hollmann","Schultes","Taylor","Young","Hyland","Breit","Tuve","Page","Popov","Oshchepkov","Lobanov"],a}return Object(d.a)(t,e),Object(l.a)(t,null,[{key:"getInstance",value:function(){return this.instance||(this.instance=new t),this.instance}}]),t}(B),A=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).WorldObjectLabel="Radar",a.baseNameFactory=T.getInstance(),a.modeOfOperation="Inactive",a.Name=a.baseNameFactory.generateBaseName({isHumanOwner:e.atLocation.myMap.owningPlayer.isHuman}),console.log("RadarBase.ts: ctor: got a radar base name:",a.Name),a}return Object(d.a)(t,e),Object(l.a)(t,[{key:"setModeOfOperation",value:function(e){this.modeOfOperation=e.mode}}]),t}(b),k=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).computerPrefix="M",a.availableBaseNames=["Wernher von Braun","Armstrong","Musk","Cayley","Goddard","Korolev","Chawla","Wallis","Ohain","Mitchell","Crawford Johnson","Amrutkar-Pate","Manypu","Arnold","Korolyov","Gagarin","Ramo","Kryukov","Barmin","Coand\u0103","Heinkel","Horikoshi","Nadiradze","Popov","Rich","Walter","Wendt","Whittle","Wright","Oppenheimer","Einstein","Curie","Rutherford","Soddy","Le\xf3 Szil\xe1rd","Joliot-Curie","Strassmann","Hahn","Sengier","Bethe"],a}return Object(d.a)(t,e),Object(l.a)(t,null,[{key:"getInstance",value:function(){return this.instance||(this.instance=new t),this.instance}}]),t}(B),L=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).WorldObjectLabel="Missile",a.public=1,a.baseNameFactory=k.getInstance(),a.Name=a.baseNameFactory.generateBaseName({isHumanOwner:e.atLocation.myMap.owningPlayer.isHuman}),a.ordnance=[],a.isReceivingOrders=!1,a}return Object(d.a)(t,e),Object(l.a)(t,[{key:"isAllOrdnanceTargeted",value:function(){return!this.ordnance.some(function(e){return null===e.myTarget})}},{key:"activate",value:function(){j.activateMissileBase({forBase:this})}}]),t}(b),C=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).computerPrefix="B",a.availableBaseNames=["Lady Hawke","Hugin","Munin","Iago","Matthew","Raven","Hedwig","Phoenix","Owl","Raptor","Elwing","Fawlkes","Jareth","Scuttle","Archimedes","Gwythaint","Thorondor","Reginal Hoopoe","Quoth","Filthy Lucre","Skarlath","Mr. Big","Senu","Nevermore","Crone","Mortimer","Motley","Kehaar"],a}return Object(d.a)(t,e),Object(l.a)(t,null,[{key:"getInstance",value:function(){return this.instance||(this.instance=new t),this.instance}}]),t}(B),I=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).WorldObjectLabel="Air",a.baseNameFactory=C.getInstance(),a.Name=a.baseNameFactory.generateBaseName({isHumanOwner:e.atLocation.myMap.owningPlayer.isHuman}),a.ordnance=[],a.totalFighters=0,a.isFlying=!1,a}return Object(d.a)(t,e),Object(l.a)(t,[{key:"activate",value:function(){console.log("AirBase.ts: activate: entering."),j.activateAirBase({forBase:this})}},{key:"isAllOrdnanceTargeted",value:function(){return!this.ordnance.some(function(e){return null===e.myTarget})}}]),t}(b),E=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).computerPrefix="T",a.availableBaseNames=[],a}return Object(d.a)(t,e),Object(l.a)(t,null,[{key:"getInstance",value:function(){return this.instance||(this.instance=new t),this.instance}}]),t}(B),S=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).WorldObjectLabel="Army",a.baseNameFactory=E.getInstance(),a.Name=a.baseNameFactory.generateBaseName({isHumanOwner:e.atLocation.myMap.owningPlayer.isHuman}),a.isReceivingOrders=!1,a.isDecamped=!1,a}return Object(d.a)(t,e),t}(b),N=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).computerPrefix="S",a.availableBaseNames=["Wahoo","Triton","George Washington","Ethan Allen","Nautilus","Turtle","Plongeur","Drebbel","Das Boot","Red October","Yellow","Seaview","SHADO","Cetacean","seaQuest","Sword","Iron Fish","Hydronaut","Supercar","Stingray","Thunderbird","Leif Eriskson","Sea Tiger","Blue Sumbarine No 6","Proteus","Wonder","Jetmarine","Fenian Ram S1881","Gotengo","Voyager","Rorqual Maaru","Sea Trench","Ulysses","UX","Vorpal Blade","I-507"],a}return Object(d.a)(t,e),Object(l.a)(t,null,[{key:"getInstance",value:function(){return this.instance||(this.instance=new t),this.instance}}]),t}(B),P=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).WorldObjectLabel="Navy",a.baseNameFactory=N.getInstance(),a.isReceivingOrders=!1,a.Name=a.baseNameFactory.generateBaseName({isHumanOwner:"Human"===e.atLocation.myMap.owner}),a.ordnance=[],a}return Object(d.a)(t,e),Object(l.a)(t,[{key:"isAllOrdnanceTargeted",value:function(){return!this.ordnance.some(function(e){return null===e.myTarget})}},{key:"activate",value:function(){j.activateNavyBase({forBase:this})}}]),t}(b),w=function(){function e(){Object(o.a)(this,e),this.msh="MilitaryBaseFactory: ",this.nextBaseID=0}return Object(l.a)(e,[{key:"createNewBase",value:function(e){console.log("MilitaryBaseFactory: createNewBase: entering with args:",{args:e});var t=K.getInstance(),a={atLocation:e.atLocation,yearBuilt:t.gameYear};switch(e.baseType){case"ABM":return new O(a);case"Radar":return new A(a);case"Navy":return new P(a);case"Missile":return new L(a);case"Air":return new I(a);case"Army":return new S(a)}}}],[{key:"getInstance",value:function(){return this.instance||(this.instance=new e),this.instance}}]),e}(),D=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"GetMapLocationSingleCharacterCode",value:function(e){if(null===e.forMapLocation.Contents)return"Empty";switch(e.forMapLocation.Contents.WorldObjectLabel){case"ABM":return"A";case"Air":return"B";case"Army":return"T";case"City":return"C";case"Missile":return"M";case"Navy":return"S";case"Radar":return"R";case"Rural":return"\u2022";case"Town":return"t"}return"empty"}},{key:"applyFunctionToCountryMap",value:function(e){for(var t=0;t<e.map.map.length;t++)for(var a=0;a<e.map.map[t].length;a++)e.xformFunc(e.map.map[t][a])}},{key:"allMilitaryBases",value:function(e){var t=this.getMapSummary({forMap:e.forMap});return[].concat(t.allAbmBases,t.allAirBases,t.allArmyBases,t.allMissileBases,t.allNavyBases,t.allRadarBases)}},{key:"getMapSummary",value:function(t){for(var a=this,n=function(e){return function(e){return e.ordnance.filter(function(e){return e.myTarget&&!1===e.wasConsumed})}(e).length},i=e,r=function(t,a){return t.Contents?{allAbmBases:i.isAbmBase(t)?a.allAbmBases.concat(t.Contents):a.allAbmBases,totalAbmMissilesOnLine:i.isAbmBase(t)?a.totalAbmMissilesOnLine+=t.Contents.totalMissiles:a.totalAbmMissilesOnLine,allRadarBases:i.isRadarBase(t)?a.allRadarBases.concat(t.Contents):a.allRadarBases,totalPassiveRadarStationsOnLine:(r=t,e.isRadarBase(r)&&"Passive"===r.Contents.modeOfOperation?a.totalPassiveRadarStationsOnLine+=1:a.totalPassiveRadarStationsOnLine),totalActiveRadarStationsOnLine:function(t){return e.isRadarBase(t)&&"Active"===t.Contents.modeOfOperation}(t)?a.totalActiveRadarStationsOnLine+=1:a.totalActiveRadarStationsOnLine,allArmyBases:i.isArmyBase(t)?a.allArmyBases.concat(t.Contents):a.allArmyBases,allAirBases:i.isAirBase(t)?a.allAirBases.concat(t.Contents):a.allAirBases,totalBombersInFlight:i.isAirBase(t)?a.totalBombersInFlight+=n(t.Contents):a.totalBombersInFlight,totalFightersOnPatrol:i.isAirBase(t)?a.totalFightersOnPatrol+=t.Contents.totalFighters:a.totalFightersOnPatrol,allMissileBases:i.isMissileBase(t)?a.allMissileBases.concat(t.Contents):a.allMissileBases,totalICBMsOnLine:i.isMissileBase(t)?a.totalICBMsOnLine+=n(t.Contents):a.totalICBMsOnLine,allNavyBases:i.isNavyBase(t)?a.allNavyBases.concat(t.Contents):a.allNavyBases,totalSubMissilesOnLine:i.isNavyBase(t)?a.totalSubMissilesOnLine+=n(t.Contents):a.totalSubMissilesOnLine,targetedMapLocations:t.isTargeted?a.targetedMapLocations.concat(t):a.targetedMapLocations,totalPopulation:a.totalPopulation+=t.Contents.Population}:a;var r},s=t.forMap.map.reduce(function(e,t){return n=e,i=t.reduce(function(e,t){return r(t,e)},a.initialSummary),{allAbmBases:n.allAbmBases.concat(i.allAbmBases),totalAbmMissilesOnLine:n.totalAbmMissilesOnLine+i.totalAbmMissilesOnLine,allRadarBases:n.allRadarBases.concat(i.allRadarBases),allAirBases:n.allAirBases.concat(i.allAirBases),allArmyBases:n.allArmyBases.concat(i.allArmyBases),allMissileBases:n.allMissileBases.concat(i.allMissileBases),allNavyBases:n.allNavyBases.concat(i.allNavyBases),targetedMapLocations:n.targetedMapLocations.concat(i.targetedMapLocations),totalICBMsOnLine:n.totalICBMsOnLine+i.totalICBMsOnLine,totalSubMissilesOnLine:n.totalSubMissilesOnLine+i.totalSubMissilesOnLine,totalPassiveRadarStationsOnLine:n.totalPassiveRadarStationsOnLine+i.totalPassiveRadarStationsOnLine,totalActiveRadarStationsOnLine:n.totalActiveRadarStationsOnLine+i.totalActiveRadarStationsOnLine,totalBombersInFlight:n.totalBombersInFlight+i.totalBombersInFlight,totalFightersOnPatrol:n.totalFightersOnPatrol+i.totalFightersOnPatrol,totalPopulation:n.totalPopulation+i.totalPopulation};var n,i},this.initialSummary),o=0,l=0;l<t.forMap.map.length;l++)for(var c=0;c<t.forMap.map[l].length;c++){var u=t.forMap.map[l][c].Contents;null!==u&&(o+=u.Population)}return s.totalPopulation=o,s}},{key:"getMapLocationHtmlID",value:function(e){return"MapLocation_".concat(e.uniqueID)}},{key:"createTestBases",value:function(e){var t=e.onMap.map[0][7],a=w.getInstance().createNewBase({baseType:"Missile",atLocation:t}),n=e.onMap.map[0][1],i=w.getInstance().createNewBase({baseType:"Radar",atLocation:n}),r=e.onMap.map[0][2],s=w.getInstance().createNewBase({baseType:"Radar",atLocation:r}),o=e.onMap.map[0][3],l=w.getInstance().createNewBase({baseType:"Air",atLocation:o}),c=e.onMap.map[0][4],u=w.getInstance().createNewBase({baseType:"Navy",atLocation:c}),d=e.onMap.map[0][5],m=w.getInstance().createNewBase({baseType:"Army",atLocation:d}),h=e.onMap.map[0][6],g=w.getInstance().createNewBase({baseType:"ABM",atLocation:h});a&&t.placeItem({itemToPlace:a}),i&&n.placeItem({itemToPlace:i}),s&&r.placeItem({itemToPlace:s}),l&&o.placeItem({itemToPlace:l}),u&&c.placeItem({itemToPlace:u}),m&&d.placeItem({itemToPlace:m}),g&&h.placeItem({itemToPlace:g})}}]),e}();D.initialSummary={allAbmBases:[],allRadarBases:[],allAirBases:[],allArmyBases:[],allNavyBases:[],allMissileBases:[],targetedMapLocations:[],totalAbmMissilesOnLine:0,totalICBMsOnLine:0,totalSubMissilesOnLine:0,totalPassiveRadarStationsOnLine:0,totalActiveRadarStationsOnLine:0,totalBombersInFlight:0,totalFightersOnPatrol:0,totalPopulation:0},D.isWO=function(e,t){return e.Contents&&e.Contents.WorldObjectLabel===t},D.isAirBase=function(e){return D.isWO(e,"Air")},D.isArmyBase=function(e){return D.isWO(e,"Army")},D.isMissileBase=function(e){return D.isWO(e,"Missile")},D.isNavyBase=function(e){return D.isWO(e,"Navy")},D.isRadarBase=function(e){return D.isWO(e,"Radar")},D.isAbmBase=function(e){return D.isWO(e,"ABM")};var j=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"registerGamestateWatcher",value:function(e){this.gameStateWatchers=this.gameStateWatchers.concat(e.watcher)}},{key:"notifyGamestateChange",value:function(e){this.gameStateWatchers.forEach(function(t){return t.handleGamestateChange({details:e.details})})}},{key:"playComputerTurn",value:function(){var e=K.getInstance();this.notifyGamestateChange({details:{changeLabel:"Computer Playing Its Turn",miscDetails:e.currentPlayer.Name}}),e.currentPlayer=e.computerPlayer,e.computerPlayer.playTurn(),e.currentPlayer=e.humanPlayer}},{key:"activateAbmBase",value:function(e){var t=e.forBase;t.totalMissiles=p.throwDice({hiNumberMinus1:5})+1,t.isTracking=!0,t.isReceivingOrders=!0,this.notifyGamestateChange({details:{changeLabel:"Base Activated",relatedBase:t}})}},{key:"handleMissileTargeted",value:function(e){var t=e.targetingOrdnance;e.atMapLocation.isTargeted=!0,t.myTarget=e.atMapLocation,t.remainingTicksBeforeStriking=y.getMissileArrivalTicks(),console.log("GameLogic: handleMissileTargeted: A missile will land in [".concat(t.remainingTicksBeforeStriking,"] ticks.")),e.attackingPlayer.allTargetedOrdnanceItems=e.attackingPlayer.allTargetedOrdnanceItems.concat(e.targetingOrdnance),this.notifyGamestateChange({details:{changeLabel:"Map Location Targeted",relatedLocation:e.atMapLocation}})}},{key:"activateMissileBase",value:function(e){var t=e.forBase;t.isReceivingOrders=!0,this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}});var a=p.throwDice({hiNumberMinus1:g.MAX_ICBMS-1})+g.MIN_ICBMS;t.ordnance=[];for(var n=0;n<a;n++)t.ordnance=t.ordnance.concat(new v({parentBase:t}))}},{key:"notifyNewBaseConstructed",value:function(e){this.notifyGamestateChange({details:{changeLabel:"New base constructed",relatedBase:e.forBaseType,relatedLocation:e.forBaseType.myMapLocation}})}},{key:"activateAirBase",value:function(e){console.log("GameLogic: activateAirBase: Entering:",e),e.forBase.isReceivingOrders=!0,this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}});var t=g.MAX_INITIAL_FIGHTERS+p.throwDice({hiNumberMinus1:g.MAX_INITIAL_FIGHTERS-1});e.forBase.totalFighters=t;for(var a=p.throwDice({hiNumberMinus1:g.MAX_ICBMS-1})+g.MIN_ICBMS,n=0;n<a;n++)e.forBase.ordnance=e.forBase.ordnance.concat(new v({parentBase:e.forBase}))}},{key:"activateNavyBase",value:function(e){e.forBase.isReceivingOrders=!0,this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}});for(var t=p.throwDice({hiNumberMinus1:g.MIN_SUB_MISSILES-1})+g.MAX_SUB_MISSILES,a=0;a<t;a++)e.forBase.ordnance=e.forBase.ordnance.concat(new v({parentBase:e.forBase}))}},{key:"activateArmyBase",value:function(e){this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}}),e.forBase.isDecamped=!0}},{key:"activateRadarBase",value:function(e){this.notifyGamestateChange({details:{relatedBase:e.forBase,changeLabel:"Base Activated"}})}},{key:"startClock",value:function(){var t=!1;setInterval(function(){if(t);else{t=!0,setTimeout(function(){e.pulseClock(),t=!1},3e3)}},1e3)}},{key:"pulseClock",value:function(){this.notifyGamestateChange({details:{changeLabel:"Tick"}}),K.getInstance().isWartime&&(this.resolveWartimeAttacks(),K.getInstance().computerPlayer.playTurn())}},{key:"resolveWartimeAttacks",value:function(){var e=this,t=function(e){console.log("GameLogic.ts: tryAbmDefense: Entering.");var t=function(e){if(console.log("GameLogic.ts: tryAbmDefense: tryIntercept: Entering, ABM Base:",{base:e.defender}),!e.defender)return"failed";if(e.defender.totalMissiles<1)return"failed";var t=p.throwDice({hiNumberMinus1:100})<50;return console.log("GameLogic.ts: tryAbmDefense: tryIntercept: did shoot down?",t),e.defender.totalMissiles--,t?(console.log("GameLogic.ts: tryAbmDefense: tryIntercept: Successfully intercepted."),e.nuclearOrdnance.wasConsumed=!0,e.nuclearOrdnance.wasIntercepted=!0,"succeeded"):"failed"},a=0,n=e.defendingPlayer.map.getAllABMBases();return n.length<1?(console.log("GameLogic.ts: tryAbmDefense: player has no ABMs, no defense possible."),"failed"):"succeeded"===t({nuclearOrdnance:e.nuclearOrdnance,defender:n[a]})?"succeeded":"ICBM"===e.nuclearOrdnance.myWorldLabel||"Submarine Missile"===e.nuclearOrdnance.myWorldLabel?"failed":(a=-1,n[0].totalMissiles>0&&(a=0),n[0].totalMissiles<1&&n.length>1&&(a=1),"succeeded"===t({nuclearOrdnance:e.nuclearOrdnance,defender:n[a]})?"succeeded":(console.log("GameLogic.ts: tryAbmDefense: tryIntercept: Failed to intercept."),"failed"))},a=function(a){console.log("resolveWartimeAttacks: tryAttack: entering, args:",{args:a});var n=function(e){return e.attackingPlayer.ordnanceItemsArrivingThisTick.filter(function(t){return null!==t.myTarget&&!t.wasConsumed&&!(t.remainingTicksBeforeStriking>0)&&t.myTarget.uniqueID===e.locationUnderAttack.uniqueID})[0]}({attackingPlayer:a.attackingPlayer,locationUnderAttack:a.locationUnderAttack});if(console.log("resolveWartimeAttacks: tryAttack: found ordnance:",{foundAttackingOrdnance:n,ticks:n?n.remainingTicksBeforeStriking:"na"}),n){n.wasConsumed=!0;var i=D.getMapSummary({forMap:a.defendingPlayer.map});if(console.log("resolveWartimeAttacks: tryAttack: player is defending attack:",{attackingOrdnance:n,defendingPlayerMapSummary:i}),"ICBM"===n.myWorldLabel){if("failed"===function(a){return"succeeded"===t({defendingPlayer:a.defendingPlayer,nuclearOrdnance:a.attackingOrdnance})?(console.log("resolveWartimeAttacks: tryICBMAttack: attacking player's ICBM was shot down by an ABM.",{defendingPlayer:a.defendingPlayer,locationAttacked:a.locationUnderAttack}),e.notifyGamestateChange({details:{changeLabel:"ICBM Intercepted",relatedLocation:a.locationUnderAttack}}),"failed"):(console.log("resolveWartimeAttacks: tryAttack: Missile successfully hit target."),"succeeded")}({attackingOrdnance:n,defendingPlayer:a.defendingPlayer,locationUnderAttack:a.locationUnderAttack}))return"failed"}else if("Bomber"===n.myWorldLabel){if("failed"===function(a){return"succeeded"===t({defendingPlayer:a.defendingPlayer,nuclearOrdnance:a.attackingOrdnance})?(console.log("resolveWartimeAttacks: tryBomberAttack: attacking player's bomber was shot down by an ABM.",{defendingPlayer:a.defendingPlayer,locationAttacked:a.locationUnderAttack}),e.notifyGamestateChange({details:{changeLabel:"Bomber was shot down by ABM",relatedLocation:a.locationUnderAttack}}),"failed"):(console.log("resolveWartimeAttacks: tryBomberAttack: Bomber successfully hit target."),"succeeded")}({attackingOrdnance:n,defendingPlayer:a.defendingPlayer,locationUnderAttack:a.locationUnderAttack}))return"failed"}else{if("Submarine Missile"!==n.myWorldLabel)return console.error("GameLogic.ts: tryAttack: Error: tried to attack with unknown ordnance type:",n),"failed";if("failed"===function(a){return"succeeded"===t({defendingPlayer:a.defendingPlayer,nuclearOrdnance:a.attackingOrdnance})?(console.log("resolveWartimeAttacks: trySubmarineAttack: attacking player's submarine missile was shot down by an ABM.",{defendingPlayer:a.defendingPlayer,locationAttacked:a.locationUnderAttack}),e.notifyGamestateChange({details:{changeLabel:"Submarine Missile Shot Down By ABM",relatedLocation:a.locationUnderAttack}}),"failed"):(console.log("resolveWartimeAttacks: tryBomberAttack: Bomber successfully hit target."),"succeeded")}({attackingOrdnance:n,defendingPlayer:a.defendingPlayer,locationUnderAttack:a.locationUnderAttack}))return"failed"}return y.getLocationDamage({attackedBy:n,locationAttacked:a.locationUnderAttack})}return console.error("resolveWartimeAttack: resolveAttack: there was no ordnance to attack with."),"failed"},n=function(e){return e.p.allTargetedOrdnanceItems=e.p.allTargetedOrdnanceItems.map(function(e){return e.remainingTicksBeforeStriking<1?e:Object(f.a)({},e,{remainingTicksBeforeStriking:e.remainingTicksBeforeStriking-1})})},i=function(e){return e.forPlayer.ordnanceItemsArrivingThisTick.some(function(e){return e.remainingTicksBeforeStriking<1&&!1===e.wasConsumed&&!1===e.wasIntercepted})},r=function(t){var n=t.defendingPlayer.map,i=D.getMapSummary({forMap:n}).targetedMapLocations,r=i.filter(function(e){return t.attackingPlayer.ordnanceItemsArrivingThisTick.filter(function(t){return!1===t.wasConsumed&&!1===t.wasIntercepted&&t.myTarget&&t.myTarget.uniqueID===e.uniqueID}).length>0});console.log("GameLogic: resolveAttacksOnPlayer: player locations under attack this tick:",{allTargetedLocations:i,locationsUnderAttackThisTick:r});for(var o=0;o<r.length;o++){var l=r[o].Contents,c=r[o];if(l){var u=a({attackingPlayer:t.attackingPlayer,defendingPlayer:t.defendingPlayer,locationUnderAttack:c});"failed"===u?e.notifyGamestateChange({details:{changeLabel:"ICBM Intercepted",relatedLocation:c}}):s({location:r[o],damage:u})}}},s=function(t){if(t.location.nuclearStrikes=t.damage.strikeCount,t.location.Contents&&(t.location.Contents.Population-=t.damage.populationKilled),t.location.myMap.owningPlayer.totalCausualties+=t.damage.populationKilled,t.location.isMilitaryBase()){var a=t.location.Contents;a.wasDestroyed=a.wasDestroyed||p.throwDice({hiNumberMinus1:100})<97,a.isReceivingOrders=a.isReceivingOrders||a.isReceivingOrders&&!a.wasDestroyed,e.notifyGamestateChange({details:{changeLabel:"Location Nuked",relatedLocation:t.location,relatedBase:a,miscDetails:"".concat(t.damage.populationKilled.toLocaleString())}})}else e.notifyGamestateChange({details:{changeLabel:"Location Nuked",relatedLocation:t.location,miscDetails:"".concat(t.damage.populationKilled.toLocaleString())}})},o=function(e){return!e.wasIntercepted&&!e.wasConsumed};console.log("GameLogic: resolveWartimeAttacks: Entering.");var l=K.getInstance(),c=l.currentPlayer,u=l.currentPlayer.isHuman?l.computerPlayer:l.humanPlayer;c.allTargetedOrdnanceItems=n({p:c}),u.allTargetedOrdnanceItems=n({p:u}),c.ordnanceItemsArrivingThisTick=c.allTargetedOrdnanceItems.filter(function(e){return o(e)&&e.remainingTicksBeforeStriking<1}),u.ordnanceItemsArrivingThisTick=u.allTargetedOrdnanceItems.filter(function(e){return o(e)&&e.remainingTicksBeforeStriking<1}),i({forPlayer:c})?(console.log("GameLogic: resolveWartimeAttacks Player A (".concat(c.Name,") has ordnance ready this tick:"),c.ordnanceItemsArrivingThisTick),r({attackingPlayer:c,defendingPlayer:u})):console.log("GameLogic: resolveWartimeAttacks Player A (".concat(c.Name,") does not have ordnance ready this tick.")),i({forPlayer:u})?(console.log("GameLogic: resolveWartimeAttacks Player B (".concat(u.Name,") has ordnance ready this tick:"),u.ordnanceItemsArrivingThisTick),r({attackingPlayer:u,defendingPlayer:c})):console.log("GameLogic: resolveWartimeAttacks Player B (".concat(u.Name,") does not have ordnance ready this tick."))}},{key:"declareWar",value:function(e){console.log("GameLogic.ts: declareWar: A player declared war:",{declaringPlayer:e.declaringPlayer}),e.declaringPlayer.declaredWar=!0,K.getInstance().isPeacetime=!1,K.getInstance().isWartime=!0,this.notifyGamestateChange({details:{changeLabel:"War Declared"}})}},{key:"finishHumanTurn",value:function(){K.getInstance().currentPlayer=K.getInstance().computerPlayer,this.playComputerTurn(),K.getInstance().currentPlayer=K.getInstance().humanPlayer}},{key:"finishComputerTurn",value:function(){K.getInstance().currentPlayer=K.getInstance().humanPlayer,this.notifyGamestateChange({details:{changeLabel:"Advance Turn"}})}},{key:"advanceTurn",value:function(){var e=K.getInstance();e.turn++,console.log("GameLogic.ts: advanceTurn: new game turn / year:",{turn:e.turn,year:e.gameYear}),this.increasePopulation(),this.notifyGamestateChange({details:{changeLabel:"Advance Turn"}})}},{key:"increasePopulation",value:function(){var e=K.getInstance().computerPlayer.map,t=K.getInstance().humanPlayer.map;e.increasePopulation(),t.increasePopulation()}},{key:"spyOnPlayer",value:function(e){console.log("Gamelogic: spyOnPlayer: entering, target:",e.targetPlayer);for(var t=D.allMilitaryBases({forMap:e.targetPlayer.map}),a=K.getInstance(),n=0;n<t.length;n++){var i=t[n];console.log("GameLogic: spyOnPlayer: spying on a base:",{base:i});var r=i.yearBuilt-y.GameStartYear,s=1===e.spyLevel?1.1:1.25,o=(a.gameYear-y.GameStartYear)*s-r;t[n].myMapLocation.enemyVisibility+=Math.ceil(o)}var l=function(e){p.throwDice({hiNumberMinus1:100})<e.myMapLocation.enemyVisibility&&(e.myMapLocation.enemyVisibility=100)};l(p.pickRandomFromArray({sourceArray:t})),e.spyLevel>1&&l(p.pickRandomFromArray({sourceArray:t}))}},{key:"getNameForNameableItem",value:function(e){var t=p.throwDice({hiNumberMinus1:e.fromNamesArr.length});return e.fromNamesArr.reduce(function(e,a,n){return n===t?{allOtherNames:e.allOtherNames,baseName:a}:{allOtherNames:e.allOtherNames.concat(a),baseName:e.baseName}},{allOtherNames:[],baseName:""})}},{key:"notifyGameReady",value:function(){this.notifyGamestateChange({details:{changeLabel:"Initialization complete, make your first move."}})}},{key:"notifyHighlightMapLocation",value:function(e){this.notifyGamestateChange({details:{changeLabel:"HighlightMapLocation",relatedLocation:e.mapLocation}})}},{key:"notifyDeHighlightMapLocation",value:function(e){this.notifyGamestateChange({details:{changeLabel:"DeHighlightMapLocation",relatedLocation:e.mapLocation}})}}]),e}();j.gameStateWatchers=[];var R=function e(){Object(o.a)(this,e),this.Name="",this.Population=0},_=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this))).WorldObjectLabel="City",a.Name=e.name,a.Population=e.population,a}return Object(d.a)(t,e),t}(R),W=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this))).WorldObjectLabel="Rural",a.Name=e.name,a.Population=e.population,a}return Object(d.a)(t,e),t}(R),F=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this))).WorldObjectLabel="Town",a.Name=e.name,a.Population=e.population,a}return Object(d.a)(t,e),t}(R),G=function(){function e(){Object(o.a)(this,e),this.msh="PopulationAreaFactory: ",this.nextPopulationAreaID=0}return Object(l.a)(e,[{key:"newName",value:function(e){return console.log("".concat(this.msh,": newName: typeof base:"),e.forPopulationArea.WorldObjectLabel),"xyzzy"}},{key:"createNewPopulationArea",value:function(e){switch(e.popAreaType){case"City":return new _({name:"xyzzy",population:p.throwDice({hiNumberMinus1:65e5})+6e6});case"Rural":return new W({name:"xyzzy",population:p.throwDice({hiNumberMinus1:1e3})+1e3});case"Town":return new F({name:"xyzzy",population:p.throwDice({hiNumberMinus1:5e4})+1e4})}return new W({name:"Error",population:-1})}}],[{key:"getInstance",value:function(){return this.instance||(this.instance=new e),this.instance}}]),e}(),H=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this))).uniqueID=0,a._doesHaveWaterBorder=!1,a.Contents=new W({name:"Empty",population:0}),a.uniqueID=t.nextID++,a.isTargeted=!1,a.nuclearStrikes=0,a.myMap=e.onMap,a._doesHaveWaterBorder=e.doesHaveWaterBorder,a}return Object(d.a)(t,e),Object(l.a)(t,[{key:"placeItem",value:function(e){this.Contents=e.itemToPlace;var t=e.itemToPlace;!t||"City"!==t.WorldObjectLabel&&"Town"!==t.WorldObjectLabel||(this.enemyVisibility=100)}},{key:"doesHaveWaterBorder",value:function(){return this._doesHaveWaterBorder}},{key:"isMilitaryBase",value:function(){var e=this;return["ABM","Air","Army","Missile","Navy","Radar"].filter(function(t){return null!==e.Contents&&t===e.Contents.WorldObjectLabel}).length>0}},{key:"increasePopulation",value:function(e){this.Contents.Population+=Math.floor(this.Contents.Population*=e.popModifier)}}]),t}(function e(){Object(o.a)(this,e),this.isTargeted=!1,this.enemyVisibility=0});H.nextID=1;var x=function(){function e(t){Object(o.a)(this,e),this.newRuralArea=function(){return G.getInstance().createNewPopulationArea({popAreaType:"Rural"})},this.newCity=function(){return G.getInstance().createNewPopulationArea({popAreaType:"City"})},this.newTown=function(){return G.getInstance().createNewPopulationArea({popAreaType:"Town"})},this.sizeX=t.sizeX,this.sizeY=t.sizeY,this.map=[[]],this.owner=t.ownerLabel,this.owningPlayer=t.owningPlayer,this.initializeMap()}return Object(l.a)(e,[{key:"logDetailedMapToConsole",value:function(){console.log("WorldMap.ts: logSelfToConsole: logging map:",{map:this.map});for(var e=0;e<this.map.length;e++)console.table(this.map[e])}},{key:"initializeMap",value:function(){var e=this;console.log("CountryMap: initializeMap: Entering, my sizex/sizey:",this.sizeX,this.sizeY,this.owner);for(var t=0;t<this.sizeX;t++){this.map.push([]);for(var a=0;a<this.sizeY;a++){var n=new H({onMap:this,doesHaveWaterBorder:0===a||a===this.sizeY-1||0===t||t===this.sizeX-1});n.Contents=this.newRuralArea(),this.map[t].push(n)}}var i=function(t){for(var a=t.totalToPlace;a>0;){var n=p.throwDice({hiNumberMinus1:e.sizeX-1}),i=p.throwDice({hiNumberMinus1:e.sizeY-1}),r=e.map[n][i];"Rural"===r.Contents.WorldObjectLabel&&(a--,r.Contents=t.factoryFunc())}};i({totalToPlace:p.throwDice({hiNumberMinus1:g.MAX_INITIAL_CITIES-g.MIN_INITIAL_CITIES})+g.MIN_INITIAL_CITIES,factoryFunc:this.newCity}),i({totalToPlace:p.throwDice({hiNumberMinus1:g.MAX_INITIAL_TOWNS-g.MIN_INITIAL_TOWNS})+g.MIN_INITIAL_TOWNS,factoryFunc:this.newTown})}},{key:"getAllMilitaryBases",value:function(){var e=this.map.map(function(e){return function(e){return e.filter(function(e){return e.isMilitaryBase()})}(e).map(function(e){return e.Contents})});return[].concat.apply([],e)}},{key:"getAllABMBases",value:function(){return this.getAllMilitaryBases().filter(function(e){return"ABM"===e.WorldObjectLabel})}},{key:"getRandomLocation",value:function(){var e=p.throwDice({hiNumberMinus1:this.map.length-1}),t=p.throwDice({hiNumberMinus1:this.map.length-1});return this.map[e][t]}},{key:"increasePopulation",value:function(){for(var e=0;e<this.sizeX;e++)for(var t=0;t<this.sizeY;t++)this.map[e][t].increasePopulation({popModifier:g.POPULATION_INCREASE_MODIFIER})}}]),e}(),U=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(c.a)(this,Object(u.a)(t).call(this,{isHuman:!1}))).totalCausualties=0,j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(e))}),e.map=new x({sizeX:10,sizeY:10,ownerLabel:"Computer",owningPlayer:Object(m.a)(Object(m.a)(e))}),e.Name="Computer",e.declaredWar=!1,e.totalFunctionalActiveRadarStations=0,e.totalFunctionalPassiveRadarStations=0,e.totalCausualties=0,D.createTestBases({onMap:e.map}),e.sentimentMap=new Map,e.sentimentMap.set("Underinformed",{percentBuildStart:25,percentSpyStart:26,percentDeclareWarStart:99}),e.sentimentMap.set("Falling Behind",{percentBuildStart:75,percentSpyStart:76,percentDeclareWarStart:99}),e.sentimentMap.set("Confident",{percentBuildStart:49,percentSpyStart:50,percentDeclareWarStart:98}),e}return Object(d.a)(t,e),Object(l.a)(t,[{key:"handleGamestateChange",value:function(e){}},{key:"playTurn",value:function(){var e=K.getInstance();e.isPeacetime&&(this.playPeacefulTurn(),setTimeout(function(){j.advanceTurn()},500)),e.isWartime&&this.playWarTurn()}},{key:"playWarTurn",value:function(){t.testGuard||(console.log("ComputerPlayer: playWarTurn: Entering."),t.testGuard=!0,this.radarTest(),this.missileTest(),this.airBaseTest(),this.navyBaseTest(),this.armyBaseTest(),this.abmBaseTest())}},{key:"abmBaseTest",value:function(){console.log("ComputerPlayer.ts: abmBaseTest: entering.");var e=D.getMapSummary({forMap:this.map});if(!(e.allAbmBases.length<1)){console.log("ComputerPlayer.ts: abmBaseTest: testing abm base:",e.allAbmBases[0]);var t=e.allAbmBases[0];j.activateAbmBase({forBase:t})}}},{key:"armyBaseTest",value:function(){console.log("ComputerPlayer.ts: armyBaseTest: entering.");var e=D.getMapSummary({forMap:this.map});if(!(e.allArmyBases.length<1)){console.log("ComputerPlayer.ts: armyBaseTest: testing army base:",e.allArmyBases[0]);var t=e.allArmyBases[0];j.activateArmyBase({forBase:t})}}},{key:"missileTest",value:function(){var e=this,t=D.getMapSummary({forMap:this.map});if(!(t.allMissileBases.length<1)){var a=t.allMissileBases[0];j.activateMissileBase({forBase:a}),console.log("ComputerPlayer.ts: missileTest: Activated a missile:",{missile:a}),a.ordnance.forEach(function(t){j.handleMissileTargeted({attackingPlayer:e,atMapLocation:e.getRandomLocation({fromMap:K.getInstance().humanPlayer.map}),targetingOrdnance:t}),console.log("ComputerPlayer.ts: missileTest: targeted missile ordnance:",t)})}}},{key:"navyBaseTest",value:function(){var e=this,t=D.getMapSummary({forMap:this.map});if(!(t.allNavyBases.length<1)){var a=t.allNavyBases[0];j.activateNavyBase({forBase:a}),console.log("ComputerPlayer.ts: navyBaseTest: Activated a Navy base:",{base:a}),a.ordnance.forEach(function(t){j.handleMissileTargeted({attackingPlayer:e,atMapLocation:e.getRandomLocation({fromMap:K.getInstance().humanPlayer.map}),targetingOrdnance:t})})}}},{key:"airBaseTest",value:function(){var e=this,t=D.getMapSummary({forMap:this.map});if(!(t.allAirBases.length<1)){var a=t.allAirBases[0];j.activateAirBase({forBase:a}),console.log("ComputerPlayer.ts: airBaseTest: Activated an air base:",{base:a}),a.ordnance.forEach(function(t){j.handleMissileTargeted({attackingPlayer:e,atMapLocation:e.getRandomLocation({fromMap:K.getInstance().humanPlayer.map}),targetingOrdnance:t})})}}},{key:"radarTest",value:function(){console.log("ComputerPlayer.ts: radarTest: entering.");var e=D.getMapSummary({forMap:this.map});if(!(e.allRadarBases.length<1)){console.log("ComputerPlayer.ts: radarTest: testing radar1.");var t=e.allRadarBases[0];if(t.setModeOfOperation({mode:"Active"}),j.activateRadarBase({forBase:t}),!(e.allRadarBases.length<2)){console.log("ComputerPlayer.ts: radarTest: testing radar2.");var a=e.allRadarBases[1];a.setModeOfOperation({mode:"Passive"}),j.activateRadarBase({forBase:a})}}}},{key:"calculateCurrentSentiment",value:function(){var e,t=K.getInstance(),a=t.humanPlayer.map.getAllMilitaryBases().filter(function(e){return e.myMapLocation.enemyVisibility>g.PCT_VISIBLE_SENTIMENT_THRESHOLD}).length,n=Math.ceil((t.gameYear-y.GameStartYear)*g.EXPECTED_BASE_COUNT_FACTOR);return e=n>2*a?"Falling Behind":n>3*a?"Underinformed":"Confident",console.log("ComputerPlayer.ts: calculateCurrentSentiment: suspected bases, expected bases:",{sentiment:e,expectedBaseCount:n,suspected:a}),e}},{key:"playPeacefulTurn",value:function(){y.getAllowedMoves().strategicOptions;var e=this.calculateCurrentSentiment(),t=this.sentimentMap.get(e),a=p.throwDice({hiNumberMinus1:99}),n=a>=t.percentDeclareWarStart?"Declare War":a>=t.percentSpyStart?"Spy":"Build";console.log("ComputerPlayer: playTurn: my strategic choice is:",n),"Build"===n?(j.spyOnPlayer({targetPlayer:K.getInstance().humanPlayer,spyLevel:1}),this.buildBases({numberToBuild:2,allowedBases:y.getAllowedMoves().tacticalOptions})):"Spy"===n?(j.spyOnPlayer({targetPlayer:K.getInstance().humanPlayer,spyLevel:2}),this.buildBases({numberToBuild:1,allowedBases:y.getAllowedMoves().tacticalOptions})):"Declare War"===n?console.log("ComputerPlayer.ts: playTurn: Declaring war!"):console.log("ComputerPlayer.ts: playTurn: skipping my turn.")}},{key:"buildBases",value:function(e){console.log("ComputerPlayer.ts: buildBases: Entering, will build ".concat(e.numberToBuild," bases."));for(var t=0;t<e.numberToBuild;t++){var a=p.pickRandomFromArray({sourceArray:e.allowedBases});console.log("ComputerPlayer.ts: buildBases: Entering, will build base:",a);var n=this.getRandomLocation({fromMap:this.map}),i=w.getInstance().createNewBase({baseType:a,atLocation:n});i&&n.placeItem({itemToPlace:i})}this.map.logDetailedMapToConsole()}},{key:"getRandomLocation",value:function(e){var t=p.throwDice({hiNumberMinus1:9}),a=p.throwDice({hiNumberMinus1:9});return e.fromMap.map[t][a]}}]),t}(h);U.testGuard=!1;var Y=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(c.a)(this,Object(u.a)(t).call(this,{isHuman:!0}))).totalCausualties=0,e.map=new x({sizeX:10,sizeY:10,ownerLabel:"Human",owningPlayer:Object(m.a)(Object(m.a)(e))}),e.Name="Human",e.declaredWar=!1,e.totalFunctionalActiveRadarStations=0,e.totalFunctionalPassiveRadarStations=0,e.totalCausualties=0,D.createTestBases({onMap:e.map}),e}return Object(d.a)(t,e),t}(h),z=function(){function e(){Object(o.a)(this,e)}return Object(l.a)(e,null,[{key:"getRandomComputerPlayerName",value:function(){return p.pickRandomFromArray({sourceArray:this.allComputerNames})}}]),e}();z.allComputerNames=["The Engine","Games Machine","Joe","MARAX","EPICAC","EMSIAC","The Prime Radiant","Mark V","Karl","Mimi","Gold","Bossy","The City Fathers","Multivac","The Central Computer","Vulcan 2","Vulcan 3","Great Coordinator","Merlin","GENiE","Colossus","Guardian","Frost","The Ox","Supreme","ZORAC","Deep Thought","Ghostwheel","Com Pewter","Mother","C Cube","Glooper","Lobsang","Hal"];var K=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(c.a)(this,Object(u.a)(t).call(this))).isPeacetime=!0,e.isWartime=!1,e.turn=0,e}return Object(d.a)(t,e),Object(l.a)(t,[{key:"gameYear",get:function(){return this.turn+y.GameStartYear}}]),Object(l.a)(t,[{key:"initializeGame",value:function(){this.computerPlayer=new U,this.computerPlayer.Name=z.getRandomComputerPlayerName(),this.humanPlayer=new Y,this.currentPlayer=this.humanPlayer}},{key:"startGame",value:function(){j.startClock()}}],[{key:"getInstance",value:function(){return this.instance||(this.instance=new t,this.instance.initializeGame()),this.instance}}]),t}(function e(){Object(o.a)(this,e)}),X=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).idx=0,n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"showMessage",value:function(e){var t=this,a=document.getElementById(e);a&&(a.innerHTML="&nbsp;"),this.idx=0;var n=setInterval(function(){a&&(a.innerHTML=t.props.tickerMessage.substring(0,t.idx++)+"\u2588")},this.props.tickerInterval);setTimeout(function(){clearInterval(n),a&&(a.innerHTML=t.props.tickerMessage),t.props.onRenderCompleteCallback&&t.props.onRenderCompleteCallback()},this.props.tickerInterval*this.props.tickerMessage.length+3*this.props.tickerInterval)}},{key:"render",value:function(){var e=this,a="ticker_".concat(t.nextHtmlID++);return setTimeout(function(){e.showMessage(a)},50),i.a.createElement("span",{id:a})}}]),t}(n.Component);X.nextHtmlID=0;var q=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).state={yearMessage:""},j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"handleGamestateChange",value:function(e){"Advance Turn"!==e.details.changeLabel&&"War Declared"!==e.details.changeLabel||this.forceUpdate()}},{key:"render",value:function(){console.log("GameHeaderComponent: render: Entering.");var e=K.getInstance();return i.a.createElement("div",{className:"gameYearContainer"},e.isPeacetime?i.a.createElement(X,{tickerInterval:29,tickerMessage:"The year was ".concat(e.gameYear,", a time of ").concat(e.isPeacetime?"peace":"war!")}):i.a.createElement(X,{tickerInterval:25,tickerMessage:"The year was ".concat(e.gameYear,", where a state of WAR existed in the world.")}))}}]),t}(n.Component),V=a(15),J=a(8),$=function e(){Object(o.a)(this,e)};$.GameButton=Object(V.withStyles)({root:{borderRadius:3,border:0,color:"#FFB000",height:48,padding:"0 30px",boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)"},label:{textTransform:"capitalize"}})(J.a);var Q=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).uiIdx=0,n.uiKey=function(){return n.uiIdx++},n.emptyManifestSelection={buildWhat:null,buildWhere:null,didBuild:!1,buildResultText:null},n.state={buildManifest:[]},j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"handleGamestateChange",value:function(e){}},{key:"componentDidMount",value:function(){this.setState({buildManifest:new Array(this.props.totalAllowedToBuild).fill(this.emptyManifestSelection)})}},{key:"handleDropResult",value:function(e){console.log("BuidManifestComponent: handleDropResult: drop finished, result:",e.result),this.setState({buildManifest:this.state.buildManifest.reduce(function(t,a,n){if(n===e.result.manifestIndex){var i={buildWhat:null,buildWhere:null,didBuild:e.result.didSucceed,buildResultText:e.result.message};return console.log("BuidManifestComponent: handleDropResult: updated manifest:",{updatedManifest:i}),t.concat(i)}return t.concat(a)},[])})}},{key:"render",value:function(){var e=this;console.log("BuildManifestComponent: render: Entering with props and state:",{props:this.props,state:this.state});var t=function(t){return e.props.allowedBasesToBuild.map(function(n,r){return i.a.createElement("span",{key:e.uiKey(),draggable:!0,onDragStart:function(a){return function(t){t.dragEvent.dataTransfer.setData(g.DROPCONSTANTS_DROPTYPE,g.BUILD_DROP),t.dragEvent.dataTransfer.setData(g.DROPCONSTANTS_BASETYPE,t.baseType),t.dragEvent.dataTransfer.setData(g.DROPCONSTANTS_MANIFESTINDEX,t.manifestIndex.toString()),window[g.NOTIFY_BUILD_RESULT_CALLBACK_NAME]=e.handleDropResult.bind(e)}({baseType:n,dragEvent:a,manifestIndex:t.forManifestIndex})},onDragEnd:function(e){console.log("BuildManifestComponent: tacticalOptionsMarkup: onDragEnd: e, ab:",{e:e,ab:n})}},a({forBaseType:n}))})},a=function(e){var t="".concat(e.forBaseType," base"),a="images/baseTokens/".concat(e.forBaseType,"base.png");return i.a.createElement("span",{className:"allowedBase"},i.a.createElement("img",{className:"selectableBase",src:a,width:"18",height:"18",title:t}))},n=function(a,n){return i.a.createElement("li",{key:e.uiKey()},a.didBuild?a.buildResultText:t({forManifestIndex:n}),function(e){return null!==e.buildResultText&&!e.didBuild}(a)?" Error: "+a.buildResultText:null)};return i.a.createElement(i.a.Fragment,null,e.props.totalAllowedToBuild>1?i.a.createElement("div",null,i.a.createElement(X,{tickerInterval:20,tickerMessage:"You are allowed to build ".concat(e.props.totalAllowedToBuild," ").concat(1==e.props.totalAllowedToBuild?"base":"bases",".")})):i.a.createElement("div",null,"You are allowed to build 1 base.")," ",i.a.createElement("div",null,i.a.createElement("h5",null,i.a.createElement(X,{tickerInterval:25,tickerMessage:"Build manifest:"})),i.a.createElement("ol",null," ",e.state.buildManifest.map(function(e,t){return n(e,t)}))),e.state.buildManifest.filter(function(e){return e.didBuild}).length===e.state.buildManifest.length?i.a.createElement("div",null,"All base assignments complete.",i.a.createElement($.GameButton,{onClick:function(){j.finishHumanTurn()}},"Finish Turn")):null)}}]),t}(n.Component),Z=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).state={},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){console.log("AbmBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"activateAbmBase",value:function(){j.activateAbmBase({forBase:this.props.base}),this.forceUpdate()}},{key:"render",value:function(){var e=this,t=this.props.base,a=i.a.createElement(i.a.Fragment,null,i.a.createElement($.GameButton,{onClick:function(){return e.activateAbmBase()}},"Enable Active Tracking")),n=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Actively tracking incoming missiles and bombers, ".concat(t.totalMissiles," missiles remain in arsenal."))),r=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Spinning up...")),s=function(e){return i.a.createElement("div",null,i.a.createElement("span",null,"".concat(t.WorldObjectLabel,": ").concat(t.Name)),e)},o=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"ABM base $",t.Name," was destroyed."));return t.wasDestroyed?o:this.props.base.isReceivingOrders?this.props.base.isTracking?s(n):s(a):s(r)}}]),t}(n.Component),ee=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).state={didActivate:!1},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){console.log("RadarBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"render",value:function(){var e=this,t=this.props.base,a=function(a){t.setModeOfOperation(a),e.setState({didActivate:!0}),e.handleRaderPulser({forBase:t}),j.activateRadarBase({forBase:t})},n=i.a.createElement(i.a.Fragment,null,i.a.createElement($.GameButton,{onClick:function(){return a({mode:"Active"})}},"Go Active"),i.a.createElement($.GameButton,{onClick:function(){return a({mode:"Passive"})}},"Go Passive")),r=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Mode: ",t.modeOfOperation," Tracking")),s=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Warming up...")),o=function(e){return i.a.createElement("div",null,i.a.createElement("span",null,"".concat(t.WorldObjectLabel,": ").concat(t.Name)),e)},l=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Radar base $",t.Name," was destroyed."));return t.wasDestroyed?l:this.props.base.isReceivingOrders?"Inactive"===this.props.base.modeOfOperation?o(n):o(r):o(s)}},{key:"handleRaderPulser",value:function(e){var t=document.getElementById(D.getMapLocationHtmlID(e.forBase.myMapLocation)),a=e.forBase.modeOfOperation,n="".concat("Active"===a?"active":"passive","RadarPulseUp"),i="".concat("Active"===a?"active":"passive","RadarPulseDown");setInterval(function(){t&&(t.classList.remove(n),t.classList.remove(i),t.classList.add(n),setTimeout(function(){t.classList.add(i)},3e3))},6e3)}}]),t}(n.Component),te=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).nextUIKey=0,n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"uiKey",value:function(){return"OrdnanceTargetingComponent_".concat(this.nextUIKey++)}},{key:"componentDidMount",value:function(){j.registerGamestateWatcher({watcher:this})}},{key:"handleGamestateChange",value:function(e){"Location Nuked"===e.details.changeLabel&&this.forceUpdate()}},{key:"render",value:function(){var e=this,t=this.props.ordnanceLabel,a=function(a){return i.a.createElement("div",{key:e.uiKey(),draggable:!0,onDragStart:function(t){return function(t){console.log("OrdnanceTargetingComponent: tacticalOptionsMarkup: onDragStart: e, index:",{e:t.dragEvent,manifestIndex:t.missileIndex}),t.dragEvent.dataTransfer.setData(g.DROPCONSTANTS_DROPTYPE,g.TARGET_MISSILE_DROP),t.dragEvent.dataTransfer.setData(g.DROPCONSTANTS_MISSILEINDEX,t.missileIndex.toString()),window[g.NOTIFY_TARGET_RESULT_CALLBACK_NAME]=e.handleDropResult.bind(e)}({dragEvent:t,missileIndex:a.forMissileIndex})}},"".concat(t," ").concat(a.forMissileIndex,"."))};return this.props.parentBase.ordnance.map(function(n,r){return n.wasIntercepted?(s={forMissileIndex:r},i.a.createElement("div",{key:e.uiKey()},"".concat(t," ").concat(s.forMissileIndex," was shot down."))):n.wasConsumed?function(a){return i.a.createElement("div",{key:e.uiKey()},"".concat(t," ").concat(a.forMissileIndex," hit its target."))}({forMissileIndex:r}):null!==n.myTarget?function(a){return i.a.createElement("div",{key:e.uiKey()},"".concat(t," ").concat(a.forMissileIndex," is targeted."))}({forMissileIndex:r}):a({forMissileIndex:r});var s})}},{key:"handleDropResult",value:function(e){console.log("OrdnanceTargetingComponent: handleDropResult: drop finished, result:",e.result);var t=this.props.parentBase.myMapLocation.myMap.owner;j.handleMissileTargeted({attackingPlayer:"Computer"===t?K.getInstance().computerPlayer:K.getInstance().humanPlayer,atMapLocation:e.result.targetedLocation,targetingOrdnance:this.props.parentBase.ordnance[e.result.missileIndex]}),this.props.parentBase.isAllOrdnanceTargeted()?this.props.targetingCompleteCallback():this.forceUpdate()}}]),t}(i.a.Component),ae=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).state={isTargetingMissiles:!1},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"activateNavyBase",value:function(){console.log("NavyBaseComponent: activateNavyBase: entering."),this.setState({isTargetingMissiles:!0})}},{key:"render",value:function(){var e=this,t=this.props.base.ordnance,a=this.props.base,n=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Targeting ".concat(t.length," missiles."),i.a.createElement("br",null)),i.a.createElement(te,{ordnanceLabel:"Submarine missile",parentBase:this.props.base,targetingCompleteCallback:function(){return e.setState({isTargetingMissiles:!1})}})),r=i.a.createElement(i.a.Fragment,null,i.a.createElement($.GameButton,{onClick:function(){return e.activateNavyBase()}},"Target ".concat(t.length," Missiles"))),s=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"".concat(t.length," en route."))),o=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Setting sail...")),l=function(e){return i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"".concat(a.WorldObjectLabel,": ").concat(a.Name)),e)},c=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Nave Base $",a.Name," was destroyed."));return a.wasDestroyed?c:this.state.isTargetingMissiles?l(n):a.isReceivingOrders?a.isAllOrdnanceTargeted()?l(s):l(r):l(o)}}]),t}(n.Component),ne=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).state={isTargetingMissiles:!1},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){console.log("MissileBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"activateMissileBase",value:function(){console.log("MissileBaseComponent: activateMissileBase: entering."),j.activateMissileBase({forBase:this.props.base}),this.setState({isTargetingMissiles:!0})}},{key:"render",value:function(){var e=this,t=this.props.base,a=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Targeting ".concat(t.ordnance.length," missiles."),i.a.createElement("br",null)),i.a.createElement(te,{ordnanceLabel:"ICBM",parentBase:t,targetingCompleteCallback:function(){return e.setState({isTargetingMissiles:!1})}})),n=i.a.createElement(i.a.Fragment,null,i.a.createElement($.GameButton,{onClick:function(){return e.activateMissileBase()}},"Target ".concat(t.ordnance.length," Missiles"))),r=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"".concat(t.ordnance.length," en route."))),s=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Fueling missiles...")),o=function(e){return i.a.createElement("div",null,i.a.createElement("span",null,"".concat(t.WorldObjectLabel,": ").concat(t.Name)),e)},l=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Missile base $",t.Name," was destroyed."));return t.wasDestroyed?l:this.state.isTargetingMissiles?o(a):t.isReceivingOrders?t.isAllOrdnanceTargeted()?o(r):o(n):o(s)}}]),t}(n.Component),ie=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).state={isTargetingBombers:!1},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){console.log("AirBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"activateAirBase",value:function(){console.log("AirbaseComponent: activateAirBase: entering."),this.setState({isTargetingBombers:!0})}},{key:"handleAllOrdnanceTargeted",value:function(){this.setState({isTargetingBombers:!1})}},{key:"render",value:function(){var e=this;console.log("AirBaseComponent: render: entering with state and props:",{state:this.state,props:this.props});var t=this.props.base,a=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Targeting ".concat(t.ordnance.length," bombers."),i.a.createElement("br",null)),i.a.createElement(te,{ordnanceLabel:"Bomber",parentBase:t,targetingCompleteCallback:function(){return e.setState({isTargetingBombers:!1})}})),n=i.a.createElement(i.a.Fragment,null,i.a.createElement($.GameButton,{onClick:function(){return e.activateAirBase()}},"Scramble ".concat(t.totalFighters," fighters and ").concat(t.ordnance.length," bombers."))),r=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"".concat(t.totalFighters," on patrol. ").concat(t.ordnance.length," bombers en route to their target."))),s=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Flight crews prepping...")),o=function(e){return i.a.createElement("div",null,i.a.createElement("span",null,"".concat(t.WorldObjectLabel,": ").concat(t.Name)),e)},l=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Air base $",t.Name," was destroyed."));return t.wasDestroyed?l:this.state.isTargetingBombers?o(a):t.isReceivingOrders?t.isAllOrdnanceTargeted()?o(r):o(n):o(s)}}]),t}(n.Component),re=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).state={},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){console.log("ArmyBaseComponent: componentDidMount: state and props:",{state:this.state,props:this.props})}},{key:"decampArmy",value:function(){j.activateArmyBase({forBase:this.props.base}),this.forceUpdate()}},{key:"render",value:function(){var e=this,t=this.props.base,a=i.a.createElement(i.a.Fragment,null,i.a.createElement($.GameButton,{onClick:function(){return e.decampArmy()}},"Decamp")),n=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Operating...")),r=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Organizing...")),s=function(e){return i.a.createElement("div",null,i.a.createElement("span",null,"".concat(t.WorldObjectLabel,": ").concat(t.Name)),e)},o=i.a.createElement(i.a.Fragment,null,i.a.createElement("span",null,"Army base $",t.Name," was destroyed."));return t.wasDestroyed?o:t.isReceivingOrders?t.isDecamped?s(n):s(a):s(r)}}]),t}(n.Component),se=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).uiKeyNbr=0,n.getBaseUI=function(e){var t=e.forBase.WorldObjectLabel;return"ABM"===t?i.a.createElement(Z,{key:n.uiKey(),base:e.forBase}):"Army"===t?i.a.createElement(re,{key:n.uiKey(),base:e.forBase}):"Air"===t?i.a.createElement(ie,{key:n.uiKey(),base:e.forBase}):"Missile"===t?i.a.createElement(ne,{key:n.uiKey(),base:e.forBase}):"Navy"===t?i.a.createElement(ae,{key:n.uiKey(),base:e.forBase}):i.a.createElement(ee,{key:n.uiKey(),base:e.forBase})},n.state={isWaitingForSelection:!1,activeBases:[],inactiveBases:[],destroyedBases:[]},j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"handleGamestateChange",value:function(e){if("Location Nuked"===e.details.changeLabel){var t=this.state.activeBases.filter(function(e){return e.baseEntity.wasDestroyed}),a=this.state.inactiveBases.filter(function(e){return e.baseEntity.wasDestroyed});this.setState({destroyedBases:this.state.destroyedBases.concat(t).concat(a),activeBases:this.state.activeBases.filter(function(e){return!e.baseEntity.wasDestroyed}),inactiveBases:this.state.inactiveBases.filter(function(e){return!e.baseEntity.wasDestroyed})})}"Tick"===e.details.changeLabel&&this.state.inactiveBases.length>0&&(this.state.inactiveBases[0].baseEntity.activate(),this.handleBaseActivatedAnimation({forBase:this.state.inactiveBases[0]}),this.setState({activeBases:this.state.activeBases.concat(this.state.inactiveBases[0]),inactiveBases:this.state.inactiveBases.slice(1)}))}},{key:"handleBaseActivatedAnimation",value:function(e){var t=document.getElementById(D.getMapLocationHtmlID(e.forBase.baseEntity.myMapLocation));t&&(t.classList.remove("activatedBase"),t.classList.add("activatedBase"))}},{key:"componentDidMount",value:function(){var e=this;this.props.registerForHumanPlayerMapClicks({ui:this});var t=this.props.player.map.getAllMilitaryBases().map(function(t){return{baseEntity:a=t,ui:e.getBaseUI({forBase:a})};var a});this.setState({inactiveBases:t})}},{key:"uiKey",value:function(){return"BaseActivatorComponent_".concat(this.uiKeyNbr++)}},{key:"handlePlayerMapClick",value:function(e){console.log("BaseActivatorComponent: handlePlayerMapClick: Got a click! args:",{args:e})}},{key:"render",value:function(){console.log("BaseActivatorComponent: render: Entering with props and state:",{props:this.props,state:this.state});return i.a.createElement("div",{className:"baseActivatorContainer"},i.a.createElement("div",null,"There exists a state of war."),i.a.createElement("div",null,i.a.createElement("h5",null,"Active bases (",this.state.activeBases.length,")")),this.state.activeBases.map(function(e){return e.ui}),i.a.createElement("div",null,i.a.createElement("h5",null,"Inactive bases (",this.state.inactiveBases.length,")")),this.state.inactiveBases.map(function(e){return e.ui}),i.a.createElement("div",null,i.a.createElement("h5",null,"Destroyed bases (",this.state.destroyedBases.length,")")),this.state.destroyedBases.map(function(e){return e.ui}))}}]),t}(n.Component),oe=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).uiIdx=0,n.uiKey=function(){return"useractions".concat(n.uiIdx++)},n.baseActivatorComponent=null,n.actionHandlers=[{actionHandler:n.handleFinishTurn,playerChoice:"Skip"},{actionHandler:n.handleBuild,playerChoice:"Build"},{actionHandler:n.handleDeclareWar,playerChoice:"Declare War"},{actionHandler:n.handleActivate,playerChoice:"Activate"},{actionHandler:n.handleActivate,playerChoice:"Activate Base"},{actionHandler:n.handleSpy,playerChoice:"Spy"},{actionHandler:n.notYetImplemented,playerChoice:"Sue for Peace"},{actionHandler:n.notYetImplemented,playerChoice:"Surrender"},{actionHandler:n.notYetImplemented,playerChoice:"ABM"},{actionHandler:n.notYetImplemented,playerChoice:"Air"},{actionHandler:n.notYetImplemented,playerChoice:"Army"},{actionHandler:n.notYetImplemented,playerChoice:"Missile"},{actionHandler:n.notYetImplemented,playerChoice:"Navy"},{actionHandler:n.notYetImplemented,playerChoice:"Radar"}],n.state={isSelectingLocation:!1,isMakingStrategicChoice:!0,isMakingTacticalChoice:!1,isBuilding:!1,tacticalChoice:null,strategicChoice:null,isWaitingForMyTurn:!1,isActivating:!1},j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"handlePlayerMapClick",value:function(e){console.log("UserActionsComponent: handlePlayerMapClick: Got a click! args:",{args:e}),this.baseActivatorComponent&&this.baseActivatorComponent.handlePlayerMapClick(e)}},{key:"getMoveChoiceLabels",value:function(){return y.getAllowedMoves()}},{key:"setInitialState",value:function(){this.setState({isBuilding:!1,isMakingStrategicChoice:!0,isMakingTacticalChoice:!1,isSelectingLocation:!1,tacticalChoice:null,strategicChoice:null,isWaitingForMyTurn:!1})}},{key:"componentDidMount",value:function(){this.props.registerMapListener({forUserComponent:this})}},{key:"handleGamestateChange",value:function(e){"Advance Turn"===e.details.changeLabel&&this.setInitialState(),"Computer Playing Its Turn"===e.details.changeLabel&&this.setState({isWaitingForMyTurn:!0}),"War Declared"===e.details.changeLabel&&this.setState({isActivating:!0,isMakingStrategicChoice:!1,isMakingTacticalChoice:!0})}},{key:"render",value:function(){var e=this,t=this.getMoveChoiceLabels().strategicOptions.map(function(t){return e.getChoiceButtonMarkup({forChoice:t})}),a=this.getMoveChoiceLabels().tacticalOptions.map(function(t){return e.getChoiceButtonMarkup({forChoice:t})});return this.state.isWaitingForMyTurn?i.a.createElement(X,{tickerInterval:10,tickerMessage:"Waiting for the computer to finish its move..."}):this.state.isMakingStrategicChoice?t:this.state.isBuilding?i.a.createElement(Q,{allowedBasesToBuild:this.getMoveChoiceLabels().tacticalOptions,totalAllowedToBuild:y.getTotalBasesAllowedToBuild({basedOnStrategicChoice:this.state.strategicChoice})}):this.state.isActivating?i.a.createElement(se,{player:this.props.player,registerForHumanPlayerMapClicks:function(t){return e.baseActivatorComponent=t.ui}}):a}},{key:"getChoiceButtonMarkup",value:function(e){var t=this.actionHandlers.filter(function(t){return t.playerChoice===e.forChoice})[0];if(!t){var a={msg:"UserActionsComponent: getChoiceButtonMarkup: Error: failed to get an action handler for the provided choice.",args:e};throw console.error(a),a}return i.a.createElement($.GameButton,{key:this.uiKey(),onClick:t.actionHandler.bind(this)},e.forChoice)}},{key:"handleDeclareWar",value:function(){console.log("UserActionsComponent: handleDeclareWar: Entering."),j.declareWar({declaringPlayer:this.props.player}),this.setState({isActivating:!0,isMakingStrategicChoice:!1,isMakingTacticalChoice:!0})}},{key:"handleBuild",value:function(){console.log("UserActionsComponent: handleBuild: Entering."),j.spyOnPlayer({targetPlayer:K.getInstance().computerPlayer,spyLevel:2}),this.setState({isMakingTacticalChoice:!0,isMakingStrategicChoice:!1,isBuilding:!0,strategicChoice:"Build",tacticalChoice:null})}},{key:"handleActivate",value:function(){this.setState({isActivating:!0,isMakingStrategicChoice:!1,isMakingTacticalChoice:!0})}},{key:"handleSpy",value:function(){j.spyOnPlayer({targetPlayer:K.getInstance().computerPlayer,spyLevel:2}),this.setState({isMakingTacticalChoice:!0,isMakingStrategicChoice:!1,isBuilding:!0,strategicChoice:"Spy",tacticalChoice:null})}},{key:"handleFinishTurn",value:function(){this.setState({isSelectingLocation:!1,isMakingStrategicChoice:!0,isMakingTacticalChoice:!1,isBuilding:!1}),j.finishHumanTurn()}},{key:"notYetImplemented",value:function(){console.log("UserActionComponent: notYetImplemented: entering, advancing turn."),j.advanceTurn(),this.setState({isSelectingLocation:!1,isMakingStrategicChoice:!0,isMakingTacticalChoice:!1,isBuilding:!1})}}]),t}(n.Component),le=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).nextUIKeyVal=0,n.uiKey=function(){return"GLC_".concat(n.nextUIKeyVal++)},n.queuedMessages=[],n.emptyMessage={messageText:"",relatedLocation:void 0},n.state={oldMessages:[],currentMessage:n.emptyMessage},n.ignoreChangeLabels=["Tick","DeHighlightMapLocation","HighlightMapLocation"],n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){j.registerGamestateWatcher({watcher:this}),this.setState({oldMessages:[],currentMessage:{messageText:"Initializing...",relatedLocation:void 0}})}},{key:"onTickerCompleted",value:function(){this.setState({oldMessages:[this.state.currentMessage].concat(this.state.oldMessages)}),this.queuedMessages.length>0?this.setState({currentMessage:this.queuedMessages.shift()}):this.setState({currentMessage:this.emptyMessage})}},{key:"loggableMessageFromGameStateChange",value:function(e){if("Computer Playing Its Turn"===e.gsc.changeLabel)return e.gsc.miscDetails+" is playing its turn.";if("New base constructed"===e.gsc.changeLabel){if(e.gsc.relatedBase){var t=e.gsc.relatedBase.WorldObjectLabel,a=e.gsc.relatedBase.Name;return"Constructed a new ".concat(t,' base, "').concat(a,'."')}return"Constructed a new base but I don't know what kind!"}if("Location Nuked"===e.gsc.changeLabel){var n=e.gsc.relatedLocation;if(n){var i=(n.myMap.owningPlayer.isHuman?"An enemy missile evaded your defenses! ":"One of your missiles evaded the enemy's defenses. ")+"".concat(e.gsc.miscDetails," citizens were killed. "),r=e.gsc.relatedBase;return r?"".concat(i," The ").concat(r.WorldObjectLabel," base there (").concat(r.Name,") ").concat(r.wasDestroyed?"was":"was not"," destroyed."):i}return"A location was nuked."}return e.gsc.changeLabel}},{key:"handleGamestateChange",value:function(e){this.ignoreChangeLabels.filter(function(t){return t===e.details.changeLabel}).length>0||(this.queuedMessages=this.queuedMessages.concat({messageText:this.loggableMessageFromGameStateChange({gsc:e.details}),relatedLocation:e.details.relatedLocation}),this.state.currentMessage.messageText.length>0||this.setState({currentMessage:this.queuedMessages?this.queuedMessages.shift():{}}))}},{key:"render",value:function(){var e=this;return i.a.createElement("div",{className:"gameLogContainer"},i.a.createElement("div",null,i.a.createElement("br",null),"-- Activities Log --"),i.a.createElement("div",null,this.state.currentMessage.messageText&&this.state.currentMessage.messageText.length>0?i.a.createElement(X,{tickerInterval:25,tickerMessage:this.state.currentMessage.messageText,onRenderCompleteCallback:this.onTickerCompleted.bind(this)}):null),i.a.createElement("div",{key:this.uiKey()},this.state.oldMessages.map(function(t){return i.a.createElement("div",{key:e.uiKey(),onMouseOver:function(){return t.relatedLocation?j.notifyHighlightMapLocation({mapLocation:t.relatedLocation}):null},onMouseOut:function(){return t.relatedLocation?j.notifyDeHighlightMapLocation({mapLocation:t.relatedLocation}):null}},t.messageText)})))}}]),t}(n.Component),ce=function(e){function t(e,a){return Object(o.a)(this,t),Object(c.a)(this,Object(u.a)(t).call(this,e,a))}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){var e=this,t=this.props.mapItem;return i.a.createElement(i.a.Fragment,null,D.GetMapLocationSingleCharacterCode({forMapLocation:t}),function(){var t=e.props.mapItem.nuclearStrikes;return 1===t?"*":2===t?"**":3===t?"***":""}())}}]),t}(i.a.Component),ue=a(10),de=a.n(ue),me=(a(261),function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).state={summarizedMap:D.initialSummary},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){j.registerGamestateWatcher({watcher:this}),this.setState({summarizedMap:D.getMapSummary({forMap:this.props.mapToSummarize})})}},{key:"render",value:function(){var e=this.state.summarizedMap;return i.a.createElement("div",{className:"mapSummaryContainer"},i.a.createElement("div",{className:"playerName"},function(e){var t="- - - - - - - - - - - - - - - - - - ";if(e.playerName.length>=44)return e.playerName;var a=.5*(44-e.playerName.length);return t.substring(0,a)+" "+e.playerName+" "+t.substr(0,a)}({playerName:this.props.mapToSummarize.owningPlayer.Name})),i.a.createElement("div",null,"Population: ",i.a.createElement(de.a,{format:"(,ddd)",duration:5e3,value:e.totalPopulation}),"\xa0 Casualties: ",i.a.createElement(de.a,{format:"(,ddd)",duration:5e3,value:this.props.mapToSummarize.owningPlayer.totalCausualties})),i.a.createElement("div",null,"Bases: A: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.allAbmBases.length}),"| R: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.allRadarBases.length}),"| B: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.allAirBases.length}),"| T: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.allArmyBases.length}),"| M: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.allMissileBases.length}),"| N: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.allNavyBases.length})),K.getInstance().isWartime?i.a.createElement("div",null,"Ordnance: A: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.totalAbmMissilesOnLine}),"| B: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.totalBombersInFlight}),"| S: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.totalSubMissilesOnLine}),"| F: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.totalFightersOnPatrol}),"| M: ",i.a.createElement(de.a,{format:"d",duration:5e3,value:e.totalICBMsOnLine})):null)}},{key:"handleGamestateChange",value:function(e){"Base Activated"!==e.details.changeLabel&&"Advance Turn"!==e.details.changeLabel&&"Location Nuked"!==e.details.changeLabel||(console.log("MapSummaryComponent: handleGameStateChange: got a game state change, Base Activated."),this.setState({summarizedMap:D.getMapSummary({forMap:this.props.mapToSummarize})}))}}]),t}(i.a.Component)),he=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).handleMapLocationHover=function(e){n.setState({hoverMapLocation:e.onMapLocation})},n.state={hoverMapLocation:null},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){this.props.registerHoverListener({hoverListener:this.handleMapLocationHover.bind(this)})}},{key:"render",value:function(){return this.state.hoverMapLocation?i.a.createElement(i.a.Fragment,null,i.a.createElement("p",null,"map location: ",this.state.hoverMapLocation.uniqueID),i.a.createElement("p",null,"map pop: ",this.state.hoverMapLocation.Contents.Population.toLocaleString()),i.a.createElement("p",null,"map location: ",this.state.hoverMapLocation.Contents.Name)):null}}]),t}(i.a.Component),ge=function(e){function t(e,a){var n;return Object(o.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e,a))).uiIdx=0,n.state={},console.log("MapComponent: Entering with props and state:",{props:e,state:a}),j.registerGamestateWatcher({watcher:Object(m.a)(Object(m.a)(n))}),n}return Object(d.a)(t,e),Object(l.a)(t,[{key:"registerHoverListener",value:function(e){console.log("MapComponent: hoverListenerRegistrationFunc: Entering with args:",e),this.notifyMapLocationHoveredOver=e.hoverListener}},{key:"render",value:function(){var e=this;return i.a.createElement("div",{className:"playerMapContainer"},i.a.createElement(me,{mapToSummarize:this.props.countryMap}),i.a.createElement(i.a.Fragment,null,i.a.createElement("table",{className:"mapContainer"},i.a.createElement("tbody",null,e.props.countryMap.map.map(function(t){return a=t,i.a.createElement("tr",{key:e.uiIdx++},a.map(function(t){return i.a.createElement("td",{key:e.uiIdx++,className:"mapCell",id:"".concat(e.getMapLocationHtmlID(t)),onMouseOver:function(a){console.log("MapComponent: onMousOver: entering, hover listener:",e.notifyMapLocationHoveredOver),e.notifyMapLocationHoveredOver&&(console.log("MapComponent: onMousOver: notifying listener."),e.notifyMapLocationHoveredOver({onMapLocation:t}))},onClick:function(){e.props.playerMapClickListener&&e.props.playerMapClickListener({location:t})},onDrop:function(a){a.preventDefault(),e.handleDrop({dropEvent:a,cell:t})},onDragLeave:function(a){e.handleLocationDragEvent({doLoc:t,eventType:"leave"}),a.preventDefault()},onDragOver:function(a){e.handleLocationDragEvent({doLoc:t,eventType:"over"}),a.preventDefault()}},i.a.createElement(ce,{mapItem:t,key:e.uiIdx++}),t.isTargeted?i.a.createElement("span",null,"[T]"):null)}));var a}))),i.a.createElement(he,{registerHoverListener:e.registerHoverListener.bind(e)})))}},{key:"handleGamestateChange",value:function(e){var t=e.details.changeLabel;if("HighlightMapLocation"===t&&this.handleHighlightRequest({forLocation:e.details.relatedLocation}),"DeHighlightMapLocation"===t)this.handleDeHighlightRequest({forLocation:e.details.relatedLocation});else if("Advance Turn"===t)this.forceUpdate();else if("Map Location Targeted"===t)this.handleLocationTargeted({targetedLocation:e.details.relatedLocation});else if("Base Activated"===t){console.log("MapComponent.tsx: handleGameStateChange: got a Base Activate updated, details:",e);var a=e.details.relatedBase;a&&this.handleBaseActivated({nukedLocation:a.myMapLocation})}else"Location Nuked"===e.details.changeLabel?this.handleLocationNuked({nukedLocation:e.details.relatedLocation}):"ICBM Intercepted"!==e.details.changeLabel&&"Submarine Missile Shot Down By ABM"!==e.details.changeLabel&&"Bomber was shot down by ABM"!==e.details.changeLabel&&"Bomber was shot down by Fighter"!==e.details.changeLabel||this.handleLocationDetargeted({detargetedLocation:e.details.relatedLocation})}},{key:"handleBaseActivated",value:function(e){if(e.nukedLocation){var t=document.getElementById(this.getMapLocationHtmlID(e.nukedLocation));t&&t.classList.add("activatedBase")}}},{key:"handleLocationTargeted",value:function(e){if(e.targetedLocation){var t=document.getElementById(this.getMapLocationHtmlID(e.targetedLocation));t&&t.classList.add("targetedMapLocation")}}},{key:"handleLocationDetargeted",value:function(e){if(e.detargetedLocation){var t=document.getElementById(this.getMapLocationHtmlID(e.detargetedLocation));t&&t.classList.remove("targetedMapLocation")}}},{key:"handleLocationNuked",value:function(e){if(e.nukedLocation){var t=document.getElementById(this.getMapLocationHtmlID(e.nukedLocation));if(t){var a=e.nukedLocation;t.classList.add(["nukedOnce","nukedTwice","nukedThrice"][a.nuclearStrikes>=3?2:a.nuclearStrikes-1]),this.handleLocationDetargeted({detargetedLocation:e.nukedLocation})}}}},{key:"handleHighlightRequest",value:function(e){if(e.forLocation){var t=document.getElementById(this.getMapLocationHtmlID(e.forLocation));if(t){t.classList.add("nukedThrice")}}}},{key:"handleDeHighlightRequest",value:function(e){if(e.forLocation){var t=document.getElementById(this.getMapLocationHtmlID(e.forLocation));if(t){t.classList.remove("nukedThrice")}}}},{key:"handleLocationDragEvent",value:function(e){if(e.doLoc){var t=document.getElementById(this.getMapLocationHtmlID(e.doLoc));t&&("over"===e.eventType?t.classList.add("mapLocationDraggedOver"):t.classList.remove("mapLocationDraggedOver"))}}},{key:"handleDrop",value:function(e){console.log("MapComponent.tsx: handleDrop: Got a drop event on a cell:",{event:e.dropEvent,cell:e.cell,baseType:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_BASETYPE),manifestIndex:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_MANIFESTINDEX),dropType:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_DROPTYPE)}),e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_DROPTYPE)===g.BUILD_DROP?(this.handleBuildDrop(e),this.forceUpdate()):e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_DROPTYPE)===g.TARGET_MISSILE_DROP?this.handleTargetDrop(e):console.log("MapComponent: handleDrop: got an unknown drop type:",e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_DROPTYPE))}},{key:"handleTargetDrop",value:function(e){var t=window[g.NOTIFY_TARGET_RESULT_CALLBACK_NAME];console.log("MapComponent.tsx: handleTargetDrop: Got a drop event on a cell:",{event:e.dropEvent,cell:e.cell,baseType:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_BASETYPE),manifestIndex:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_MANIFESTINDEX)}),this.handleLocationDragEvent({doLoc:e.cell,eventType:"leave"}),t({result:{didSucceed:!0,missileIndex:parseInt(e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_MISSILEINDEX)),message:"Successfully targeted enemy sector ".concat(e.cell.uniqueID,"."),targetedLocation:e.cell}})}},{key:"handleBuildDrop",value:function(e){var t=window[g.NOTIFY_BUILD_RESULT_CALLBACK_NAME];if(console.log("MapComponent.tsx: handleBuildDrop: Got a drop event on a cell:",{event:e.dropEvent,cell:e.cell,baseType:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_BASETYPE),manifestIndex:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_MANIFESTINDEX)}),null!==e.cell.Contents&&y.canPlaceItemAtMapLocation({atLocation:e.cell,itemToCheck:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_BASETYPE),map:this.props.countryMap})){var a=w.getInstance().createNewBase({baseType:e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_BASETYPE),atLocation:e.cell});a?(e.cell.placeItem({itemToPlace:a}),t({result:{didSucceed:!0,manifestIndex:parseInt(e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_MANIFESTINDEX)),message:"".concat(a.WorldObjectLabel," base ").concat(a.Name," slated for construction.")}}),j.notifyNewBaseConstructed({forBaseType:a})):t({result:{didSucceed:!0,manifestIndex:parseInt(e.dropEvent.dataTransfer.getData()),message:"unknown base type!."}})}else t({result:{didSucceed:!1,manifestIndex:parseInt(e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_MANIFESTINDEX)),message:"You cannot build the ".concat(e.dropEvent.dataTransfer.getData(g.DROPCONSTANTS_BASETYPE)," base at that location. You can only build new bases in rural areas. Navy bases must border the ocean.")}})}},{key:"getMapLocationHtmlID",value:function(e){return D.getMapLocationHtmlID(e)}}]),t}(i.a.Component),pe=function e(){Object(o.a)(this,e)};pe.BUILD_VERSION="83 at 11:25:44.39 on Sun 05/10/2020";var ye=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];return(a=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).userActionsComponent=null,a}return Object(d.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){K.getInstance().startGame(),j.notifyGameReady()}},{key:"registerMapListener",value:function(e){this.userActionsComponent=e.forUserComponent}},{key:"playerMapClickListener",value:function(e){console.log("Game.tsx: playerMapClickListener: player clicked on a map location:",e.location),this.userActionsComponent&&this.userActionsComponent.handlePlayerMapClick(e)}},{key:"render",value:function(){var e=this,t=K.getInstance();return i.a.createElement(J.b,{container:!0,className:"gameDefaults gameContainer",alignContent:"center"},i.a.createElement(J.b,{item:!0,xs:12},i.a.createElement(q,null)),i.a.createElement(J.b,{item:!0,xs:4,className:"gameUILeftZone"},i.a.createElement(J.b,{container:!0,alignContent:"center"},i.a.createElement(ge,{countryMap:t.humanPlayer.map,playerMapClickListener:e.playerMapClickListener.bind(e)}))),i.a.createElement(J.b,{item:!0,xs:4,className:"gameUIMiddleZone"},i.a.createElement(oe,{player:t.humanPlayer,mapClickListener:e.playerMapClickListener.bind(e),registerMapListener:e.registerMapListener.bind(e)}),i.a.createElement(le,null)),i.a.createElement(J.b,{item:!0,xs:4,className:"gameUIRightZone"},i.a.createElement(ge,{countryMap:t.computerPlayer.map})),i.a.createElement("span",{className:"gameBuildInformation"},"Build version: ",pe.BUILD_VERSION,i.a.createElement("br",null),"View the source: ",i.a.createElement("a",{href:"https://github.com/pagalvin/rpsn5",target:"github"},"https://github.com/pagalvin/rpsn5")))}}]),t}(n.Component),fe=function(e){function t(){return Object(o.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return i.a.createElement(J.c,null,i.a.createElement(J.b,{container:!0,justify:"center"},i.a.createElement(ye,null)))}}]),t}(n.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(i.a.createElement(fe,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[164,2,1]]]);
//# sourceMappingURL=main.992a2016.chunk.js.map